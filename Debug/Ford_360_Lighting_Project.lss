
Ford_360_Lighting_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000024  00800100  00001512  000015a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001512  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000e2  00800124  00800124  000015ca  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000015ca  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000015fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000003b0  00000000  00000000  00001638  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003a84  00000000  00000000  000019e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000196b  00000000  00000000  0000546c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000020da  00000000  00000000  00006dd7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000009cc  00000000  00000000  00008eb4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000f84  00000000  00000000  00009880  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002298  00000000  00000000  0000a804  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000310  00000000  00000000  0000ca9c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__ctors_end>
       4:	0c 94 d0 03 	jmp	0x7a0	; 0x7a0 <__vector_1>
       8:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
       c:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__vector_3>
      10:	0c 94 09 01 	jmp	0x212	; 0x212 <__vector_4>
      14:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      18:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      1c:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      20:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      24:	0c 94 b1 00 	jmp	0x162	; 0x162 <__vector_9>
      28:	0c 94 a0 07 	jmp	0xf40	; 0xf40 <__vector_10>
      2c:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      30:	0c 94 18 09 	jmp	0x1230	; 0x1230 <__vector_12>
      34:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      38:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__vector_14>
      3c:	0c 94 92 00 	jmp	0x124	; 0x124 <__vector_15>
      40:	0c 94 8d 02 	jmp	0x51a	; 0x51a <__vector_16>
      44:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      48:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>
      4c:	0c 94 90 00 	jmp	0x120	; 0x120 <__bad_interrupt>

00000050 <__trampolines_end>:
      50:	41 54       	subi	r20, 0x41	; 65
      52:	45 31       	cpi	r20, 0x15	; 21
      54:	2f 72       	andi	r18, 0x2F	; 47
      56:	41 54       	subi	r20, 0x41	; 65
      58:	5e 53       	subi	r21, 0x3E	; 62
      5a:	49 43       	sbci	r20, 0x39	; 57
      5c:	41 3d       	cpi	r20, 0xD1	; 209
      5e:	31 2c       	mov	r3, r1
      60:	33 2f       	mov	r19, r19
      62:	72 41       	sbci	r23, 0x12	; 18
      64:	54 5e       	subi	r21, 0xE4	; 228
      66:	53 49       	sbci	r21, 0x93	; 147
      68:	53 53       	subi	r21, 0x33	; 51
      6a:	3d 30       	cpi	r19, 0x0D	; 13
      6c:	2c 22       	and	r2, r28
      6e:	73 72       	andi	r23, 0x23	; 35
      70:	76 54       	subi	r23, 0x46	; 70
      72:	79 70       	andi	r23, 0x09	; 9
      74:	65 22       	and	r6, r21
      76:	2c 22       	and	r2, r28
      78:	73 6f       	ori	r23, 0xF3	; 243
      7a:	63 6b       	ori	r22, 0xB3	; 179
      7c:	65 74       	andi	r22, 0x45	; 69
      7e:	22 2f       	mov	r18, r18
      80:	72 41       	sbci	r23, 0x12	; 18
      82:	54 5e       	subi	r21, 0xE4	; 228
      84:	53 49       	sbci	r21, 0x93	; 147
      86:	53 53       	subi	r21, 0x33	; 51
      88:	3d 30       	cpi	r19, 0x0D	; 13
      8a:	2c 22       	and	r2, r28
      8c:	63 6f       	ori	r22, 0xF3	; 243
      8e:	6e 49       	sbci	r22, 0x9E	; 158
      90:	64 22       	and	r6, r20
      92:	2c 33       	cpi	r18, 0x3C	; 60
      94:	2f 72       	andi	r18, 0x2F	; 47
      96:	41 54       	subi	r20, 0x41	; 65
      98:	5e 53       	subi	r21, 0x3E	; 62
      9a:	49 53       	subi	r20, 0x39	; 57
      9c:	53 3d       	cpi	r21, 0xD3	; 211
      9e:	30 2c       	mov	r3, r0
      a0:	22 61       	ori	r18, 0x12	; 18
      a2:	64 64       	ori	r22, 0x44	; 68
      a4:	72 65       	ori	r23, 0x52	; 82
      a6:	73 73       	andi	r23, 0x33	; 51
      a8:	22 2c       	mov	r2, r2
      aa:	22 73       	andi	r18, 0x32	; 50
      ac:	6f 63       	ori	r22, 0x3F	; 63
      ae:	6b 74       	andi	r22, 0x4B	; 75
      b0:	63 70       	andi	r22, 0x03	; 3
      b2:	3a 2f       	mov	r19, r26
      b4:	2f 6c       	ori	r18, 0xCF	; 207
      b6:	69 73       	andi	r22, 0x39	; 57
      b8:	74 65       	ori	r23, 0x54	; 84
      ba:	6e 65       	ori	r22, 0x5E	; 94
      bc:	72 3a       	cpi	r23, 0xA2	; 162
      be:	32 30       	cpi	r19, 0x02	; 2
      c0:	30 30       	cpi	r19, 0x00	; 0
      c2:	3b 65       	ori	r19, 0x5B	; 91
      c4:	74 78       	andi	r23, 0x84	; 132
      c6:	3d 32       	cpi	r19, 0x2D	; 45
      c8:	36 3b       	cpi	r19, 0xB6	; 182
      ca:	61 75       	andi	r22, 0x51	; 81
      cc:	74 6f       	ori	r23, 0xF4	; 244
      ce:	63 6f       	ori	r22, 0xF3	; 243
      d0:	6e 6e       	ori	r22, 0xEE	; 238
      d2:	65 63       	ori	r22, 0x35	; 53
      d4:	74 3d       	cpi	r23, 0xD4	; 212
      d6:	31 22       	and	r3, r17
      d8:	2f 72       	andi	r18, 0x2F	; 47
      da:	41 54       	subi	r20, 0x41	; 65
      dc:	5e 53       	subi	r21, 0x3E	; 62
      de:	49 53       	subi	r20, 0x39	; 57
      e0:	4f 3d       	cpi	r20, 0xDF	; 223
      e2:	30 2f       	mov	r19, r16
      e4:	72 00       	.word	0x0072	; ????

000000e6 <__ctors_end>:
      e6:	11 24       	eor	r1, r1
      e8:	1f be       	out	0x3f, r1	; 63
      ea:	cf ef       	ldi	r28, 0xFF	; 255
      ec:	d2 e0       	ldi	r29, 0x02	; 2
      ee:	de bf       	out	0x3e, r29	; 62
      f0:	cd bf       	out	0x3d, r28	; 61

000000f2 <__do_copy_data>:
      f2:	11 e0       	ldi	r17, 0x01	; 1
      f4:	a0 e0       	ldi	r26, 0x00	; 0
      f6:	b1 e0       	ldi	r27, 0x01	; 1
      f8:	e2 e1       	ldi	r30, 0x12	; 18
      fa:	f5 e1       	ldi	r31, 0x15	; 21
      fc:	02 c0       	rjmp	.+4      	; 0x102 <__do_copy_data+0x10>
      fe:	05 90       	lpm	r0, Z+
     100:	0d 92       	st	X+, r0
     102:	a4 32       	cpi	r26, 0x24	; 36
     104:	b1 07       	cpc	r27, r17
     106:	d9 f7       	brne	.-10     	; 0xfe <__do_copy_data+0xc>

00000108 <__do_clear_bss>:
     108:	22 e0       	ldi	r18, 0x02	; 2
     10a:	a4 e2       	ldi	r26, 0x24	; 36
     10c:	b1 e0       	ldi	r27, 0x01	; 1
     10e:	01 c0       	rjmp	.+2      	; 0x112 <.do_clear_bss_start>

00000110 <.do_clear_bss_loop>:
     110:	1d 92       	st	X+, r1

00000112 <.do_clear_bss_start>:
     112:	a6 30       	cpi	r26, 0x06	; 6
     114:	b2 07       	cpc	r27, r18
     116:	e1 f7       	brne	.-8      	; 0x110 <.do_clear_bss_loop>
     118:	0e 94 4b 04 	call	0x896	; 0x896 <main>
     11c:	0c 94 87 0a 	jmp	0x150e	; 0x150e <_exit>

00000120 <__bad_interrupt>:
     120:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000124 <__vector_15>:
     124:	1f 92       	push	r1
     126:	0f 92       	push	r0
     128:	0f b6       	in	r0, 0x3f	; 63
     12a:	0f 92       	push	r0
     12c:	11 24       	eor	r1, r1
     12e:	8f 93       	push	r24
     130:	9f 93       	push	r25
     132:	ef 93       	push	r30
     134:	ff 93       	push	r31
     136:	ea e7       	ldi	r30, 0x7A	; 122
     138:	f0 e0       	ldi	r31, 0x00	; 0
     13a:	80 81       	ld	r24, Z
     13c:	80 61       	ori	r24, 0x10	; 16
     13e:	80 83       	st	Z, r24
     140:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__EEPROM_REGION_LENGTH__+0x7f0078>
     144:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__EEPROM_REGION_LENGTH__+0x7f0079>
     148:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     14c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     150:	ff 91       	pop	r31
     152:	ef 91       	pop	r30
     154:	9f 91       	pop	r25
     156:	8f 91       	pop	r24
     158:	0f 90       	pop	r0
     15a:	0f be       	out	0x3f, r0	; 63
     15c:	0f 90       	pop	r0
     15e:	1f 90       	pop	r1
     160:	18 95       	reti

00000162 <__vector_9>:
     162:	1f 92       	push	r1
     164:	0f 92       	push	r0
     166:	0f b6       	in	r0, 0x3f	; 63
     168:	0f 92       	push	r0
     16a:	11 24       	eor	r1, r1
     16c:	8f 93       	push	r24
     16e:	ef 93       	push	r30
     170:	ff 93       	push	r31
     172:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__data_end>
     176:	88 23       	and	r24, r24
     178:	19 f0       	breq	.+6      	; 0x180 <__vector_9+0x1e>
     17a:	81 30       	cpi	r24, 0x01	; 1
     17c:	39 f0       	breq	.+14     	; 0x18c <__vector_9+0x2a>
     17e:	0c c0       	rjmp	.+24     	; 0x198 <__vector_9+0x36>
     180:	e3 e8       	ldi	r30, 0x83	; 131
     182:	f0 e0       	ldi	r31, 0x00	; 0
     184:	80 81       	ld	r24, Z
     186:	80 62       	ori	r24, 0x20	; 32
     188:	80 83       	st	Z, r24
     18a:	06 c0       	rjmp	.+12     	; 0x198 <__vector_9+0x36>
     18c:	e3 e8       	ldi	r30, 0x83	; 131
     18e:	f0 e0       	ldi	r31, 0x00	; 0
     190:	80 81       	ld	r24, Z
     192:	8f 7d       	andi	r24, 0xDF	; 223
     194:	80 83       	st	Z, r24
     196:	2b 98       	cbi	0x05, 3	; 5
     198:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__data_end>
     19c:	8f 5f       	subi	r24, 0xFF	; 255
     19e:	83 70       	andi	r24, 0x03	; 3
     1a0:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__data_end>
     1a4:	ff 91       	pop	r31
     1a6:	ef 91       	pop	r30
     1a8:	8f 91       	pop	r24
     1aa:	0f 90       	pop	r0
     1ac:	0f be       	out	0x3f, r0	; 63
     1ae:	0f 90       	pop	r0
     1b0:	1f 90       	pop	r1
     1b2:	18 95       	reti

000001b4 <__vector_3>:
     1b4:	1f 92       	push	r1
     1b6:	0f 92       	push	r0
     1b8:	0f b6       	in	r0, 0x3f	; 63
     1ba:	0f 92       	push	r0
     1bc:	11 24       	eor	r1, r1
     1be:	2f 93       	push	r18
     1c0:	3f 93       	push	r19
     1c2:	4f 93       	push	r20
     1c4:	5f 93       	push	r21
     1c6:	6f 93       	push	r22
     1c8:	7f 93       	push	r23
     1ca:	8f 93       	push	r24
     1cc:	9f 93       	push	r25
     1ce:	af 93       	push	r26
     1d0:	bf 93       	push	r27
     1d2:	ef 93       	push	r30
     1d4:	ff 93       	push	r31
     1d6:	e8 e6       	ldi	r30, 0x68	; 104
     1d8:	f0 e0       	ldi	r31, 0x00	; 0
     1da:	80 81       	ld	r24, Z
     1dc:	8e 7f       	andi	r24, 0xFE	; 254
     1de:	80 83       	st	Z, r24
     1e0:	4a e0       	ldi	r20, 0x0A	; 10
     1e2:	50 e0       	ldi	r21, 0x00	; 0
     1e4:	60 e0       	ldi	r22, 0x00	; 0
     1e6:	70 e0       	ldi	r23, 0x00	; 0
     1e8:	82 e0       	ldi	r24, 0x02	; 2
     1ea:	91 e0       	ldi	r25, 0x01	; 1
     1ec:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <Start_Timer>
     1f0:	ff 91       	pop	r31
     1f2:	ef 91       	pop	r30
     1f4:	bf 91       	pop	r27
     1f6:	af 91       	pop	r26
     1f8:	9f 91       	pop	r25
     1fa:	8f 91       	pop	r24
     1fc:	7f 91       	pop	r23
     1fe:	6f 91       	pop	r22
     200:	5f 91       	pop	r21
     202:	4f 91       	pop	r20
     204:	3f 91       	pop	r19
     206:	2f 91       	pop	r18
     208:	0f 90       	pop	r0
     20a:	0f be       	out	0x3f, r0	; 63
     20c:	0f 90       	pop	r0
     20e:	1f 90       	pop	r1
     210:	18 95       	reti

00000212 <__vector_4>:
     212:	1f 92       	push	r1
     214:	0f 92       	push	r0
     216:	0f b6       	in	r0, 0x3f	; 63
     218:	0f 92       	push	r0
     21a:	11 24       	eor	r1, r1
     21c:	2f 93       	push	r18
     21e:	3f 93       	push	r19
     220:	4f 93       	push	r20
     222:	5f 93       	push	r21
     224:	6f 93       	push	r22
     226:	7f 93       	push	r23
     228:	8f 93       	push	r24
     22a:	9f 93       	push	r25
     22c:	af 93       	push	r26
     22e:	bf 93       	push	r27
     230:	ef 93       	push	r30
     232:	ff 93       	push	r31
     234:	e8 e6       	ldi	r30, 0x68	; 104
     236:	f0 e0       	ldi	r31, 0x00	; 0
     238:	80 81       	ld	r24, Z
     23a:	8d 7f       	andi	r24, 0xFD	; 253
     23c:	80 83       	st	Z, r24
     23e:	4a e0       	ldi	r20, 0x0A	; 10
     240:	50 e0       	ldi	r21, 0x00	; 0
     242:	60 e0       	ldi	r22, 0x00	; 0
     244:	70 e0       	ldi	r23, 0x00	; 0
     246:	82 e0       	ldi	r24, 0x02	; 2
     248:	91 e0       	ldi	r25, 0x01	; 1
     24a:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <Start_Timer>
     24e:	ff 91       	pop	r31
     250:	ef 91       	pop	r30
     252:	bf 91       	pop	r27
     254:	af 91       	pop	r26
     256:	9f 91       	pop	r25
     258:	8f 91       	pop	r24
     25a:	7f 91       	pop	r23
     25c:	6f 91       	pop	r22
     25e:	5f 91       	pop	r21
     260:	4f 91       	pop	r20
     262:	3f 91       	pop	r19
     264:	2f 91       	pop	r18
     266:	0f 90       	pop	r0
     268:	0f be       	out	0x3f, r0	; 63
     26a:	0f 90       	pop	r0
     26c:	1f 90       	pop	r1
     26e:	18 95       	reti

00000270 <CAN_Reset>:
     270:	cf 93       	push	r28
     272:	df 93       	push	r29
     274:	1f 92       	push	r1
     276:	cd b7       	in	r28, 0x3d	; 61
     278:	de b7       	in	r29, 0x3e	; 62
     27a:	80 ec       	ldi	r24, 0xC0	; 192
     27c:	89 83       	std	Y+1, r24	; 0x01
     27e:	20 e0       	ldi	r18, 0x00	; 0
     280:	30 e0       	ldi	r19, 0x00	; 0
     282:	ae 01       	movw	r20, r28
     284:	4f 5f       	subi	r20, 0xFF	; 255
     286:	5f 4f       	sbci	r21, 0xFF	; 255
     288:	60 e0       	ldi	r22, 0x00	; 0
     28a:	81 e0       	ldi	r24, 0x01	; 1
     28c:	0e 94 58 05 	call	0xab0	; 0xab0 <Write_SPI>
     290:	0f 90       	pop	r0
     292:	df 91       	pop	r29
     294:	cf 91       	pop	r28
     296:	08 95       	ret

00000298 <CAN_Read>:
     298:	cf 93       	push	r28
     29a:	df 93       	push	r29
     29c:	00 d0       	rcall	.+0      	; 0x29e <CAN_Read+0x6>
     29e:	cd b7       	in	r28, 0x3d	; 61
     2a0:	de b7       	in	r29, 0x3e	; 62
     2a2:	9b 01       	movw	r18, r22
     2a4:	93 e0       	ldi	r25, 0x03	; 3
     2a6:	99 83       	std	Y+1, r25	; 0x01
     2a8:	8a 83       	std	Y+2, r24	; 0x02
     2aa:	ae 01       	movw	r20, r28
     2ac:	4f 5f       	subi	r20, 0xFF	; 255
     2ae:	5f 4f       	sbci	r21, 0xFF	; 255
     2b0:	61 e0       	ldi	r22, 0x01	; 1
     2b2:	82 e0       	ldi	r24, 0x02	; 2
     2b4:	0e 94 58 05 	call	0xab0	; 0xab0 <Write_SPI>
     2b8:	0f 90       	pop	r0
     2ba:	0f 90       	pop	r0
     2bc:	df 91       	pop	r29
     2be:	cf 91       	pop	r28
     2c0:	08 95       	ret

000002c2 <CAN_Write>:
     2c2:	cf 93       	push	r28
     2c4:	df 93       	push	r29
     2c6:	00 d0       	rcall	.+0      	; 0x2c8 <CAN_Write+0x6>
     2c8:	1f 92       	push	r1
     2ca:	cd b7       	in	r28, 0x3d	; 61
     2cc:	de b7       	in	r29, 0x3e	; 62
     2ce:	92 e0       	ldi	r25, 0x02	; 2
     2d0:	99 83       	std	Y+1, r25	; 0x01
     2d2:	8a 83       	std	Y+2, r24	; 0x02
     2d4:	fb 01       	movw	r30, r22
     2d6:	80 81       	ld	r24, Z
     2d8:	8b 83       	std	Y+3, r24	; 0x03
     2da:	20 e0       	ldi	r18, 0x00	; 0
     2dc:	30 e0       	ldi	r19, 0x00	; 0
     2de:	ae 01       	movw	r20, r28
     2e0:	4f 5f       	subi	r20, 0xFF	; 255
     2e2:	5f 4f       	sbci	r21, 0xFF	; 255
     2e4:	60 e0       	ldi	r22, 0x00	; 0
     2e6:	83 e0       	ldi	r24, 0x03	; 3
     2e8:	0e 94 58 05 	call	0xab0	; 0xab0 <Write_SPI>
     2ec:	0f 90       	pop	r0
     2ee:	0f 90       	pop	r0
     2f0:	0f 90       	pop	r0
     2f2:	df 91       	pop	r29
     2f4:	cf 91       	pop	r28
     2f6:	08 95       	ret

000002f8 <CAN_Bit_Modify>:
     2f8:	cf 93       	push	r28
     2fa:	df 93       	push	r29
     2fc:	00 d0       	rcall	.+0      	; 0x2fe <CAN_Bit_Modify+0x6>
     2fe:	00 d0       	rcall	.+0      	; 0x300 <__stack+0x1>
     300:	cd b7       	in	r28, 0x3d	; 61
     302:	de b7       	in	r29, 0x3e	; 62
     304:	95 e0       	ldi	r25, 0x05	; 5
     306:	99 83       	std	Y+1, r25	; 0x01
     308:	8a 83       	std	Y+2, r24	; 0x02
     30a:	6b 83       	std	Y+3, r22	; 0x03
     30c:	fa 01       	movw	r30, r20
     30e:	80 81       	ld	r24, Z
     310:	8c 83       	std	Y+4, r24	; 0x04
     312:	20 e0       	ldi	r18, 0x00	; 0
     314:	30 e0       	ldi	r19, 0x00	; 0
     316:	ae 01       	movw	r20, r28
     318:	4f 5f       	subi	r20, 0xFF	; 255
     31a:	5f 4f       	sbci	r21, 0xFF	; 255
     31c:	60 e0       	ldi	r22, 0x00	; 0
     31e:	84 e0       	ldi	r24, 0x04	; 4
     320:	0e 94 58 05 	call	0xab0	; 0xab0 <Write_SPI>
     324:	0f 90       	pop	r0
     326:	0f 90       	pop	r0
     328:	0f 90       	pop	r0
     32a:	0f 90       	pop	r0
     32c:	df 91       	pop	r29
     32e:	cf 91       	pop	r28
     330:	08 95       	ret

00000332 <CAN_Initialize_1>:
     332:	cf 93       	push	r28
     334:	df 93       	push	r29
     336:	90 93 26 01 	sts	0x0126, r25	; 0x800126 <a_p_Recv_List+0x1>
     33a:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <a_p_Recv_List>
     33e:	0e 94 38 01 	call	0x270	; 0x270 <CAN_Reset>
     342:	80 e9       	ldi	r24, 0x90	; 144
     344:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <TX_Data>
     348:	6a e2       	ldi	r22, 0x2A	; 42
     34a:	71 e0       	ldi	r23, 0x01	; 1
     34c:	8f e0       	ldi	r24, 0x0F	; 15
     34e:	0e 94 61 01 	call	0x2c2	; 0x2c2 <CAN_Write>
     352:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <TX_Data>
     356:	4a e2       	ldi	r20, 0x2A	; 42
     358:	51 e0       	ldi	r21, 0x01	; 1
     35a:	64 e0       	ldi	r22, 0x04	; 4
     35c:	8f e0       	ldi	r24, 0x0F	; 15
     35e:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <CAN_Bit_Modify>
     362:	d1 e4       	ldi	r29, 0x41	; 65
     364:	d0 93 2a 01 	sts	0x012A, r29	; 0x80012a <TX_Data>
     368:	4a e2       	ldi	r20, 0x2A	; 42
     36a:	51 e0       	ldi	r21, 0x01	; 1
     36c:	61 e0       	ldi	r22, 0x01	; 1
     36e:	8a e2       	ldi	r24, 0x2A	; 42
     370:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <CAN_Bit_Modify>
     374:	c1 ef       	ldi	r28, 0xF1	; 241
     376:	c0 93 2a 01 	sts	0x012A, r28	; 0x80012a <TX_Data>
     37a:	4a e2       	ldi	r20, 0x2A	; 42
     37c:	51 e0       	ldi	r21, 0x01	; 1
     37e:	67 e0       	ldi	r22, 0x07	; 7
     380:	89 e2       	ldi	r24, 0x29	; 41
     382:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <CAN_Bit_Modify>
     386:	c0 93 2a 01 	sts	0x012A, r28	; 0x80012a <TX_Data>
     38a:	4a e2       	ldi	r20, 0x2A	; 42
     38c:	51 e0       	ldi	r21, 0x01	; 1
     38e:	68 e3       	ldi	r22, 0x38	; 56
     390:	89 e2       	ldi	r24, 0x29	; 41
     392:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <CAN_Bit_Modify>
     396:	c0 93 2a 01 	sts	0x012A, r28	; 0x80012a <TX_Data>
     39a:	4a e2       	ldi	r20, 0x2A	; 42
     39c:	51 e0       	ldi	r21, 0x01	; 1
     39e:	60 ec       	ldi	r22, 0xC0	; 192
     3a0:	89 e2       	ldi	r24, 0x29	; 41
     3a2:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <CAN_Bit_Modify>
     3a6:	85 e8       	ldi	r24, 0x85	; 133
     3a8:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <TX_Data>
     3ac:	6a e2       	ldi	r22, 0x2A	; 42
     3ae:	71 e0       	ldi	r23, 0x01	; 1
     3b0:	88 e2       	ldi	r24, 0x28	; 40
     3b2:	0e 94 61 01 	call	0x2c2	; 0x2c2 <CAN_Write>
     3b6:	d0 93 2a 01 	sts	0x012A, r29	; 0x80012a <TX_Data>
     3ba:	4a e2       	ldi	r20, 0x2A	; 42
     3bc:	51 e0       	ldi	r21, 0x01	; 1
     3be:	60 ec       	ldi	r22, 0xC0	; 192
     3c0:	8a e2       	ldi	r24, 0x2A	; 42
     3c2:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <CAN_Bit_Modify>
     3c6:	df 91       	pop	r29
     3c8:	cf 91       	pop	r28
     3ca:	08 95       	ret

000003cc <CAN_Initialize_2>:
     3cc:	8f ef       	ldi	r24, 0xFF	; 255
     3ce:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <TX_Data>
     3d2:	6a e2       	ldi	r22, 0x2A	; 42
     3d4:	71 e0       	ldi	r23, 0x01	; 1
     3d6:	8b e2       	ldi	r24, 0x2B	; 43
     3d8:	0e 94 61 01 	call	0x2c2	; 0x2c2 <CAN_Write>
     3dc:	83 e0       	ldi	r24, 0x03	; 3
     3de:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <TX_Data>
     3e2:	6a e2       	ldi	r22, 0x2A	; 42
     3e4:	71 e0       	ldi	r23, 0x01	; 1
     3e6:	80 e3       	ldi	r24, 0x30	; 48
     3e8:	0e 94 61 01 	call	0x2c2	; 0x2c2 <CAN_Write>
     3ec:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <TX_Data>
     3f0:	6a e2       	ldi	r22, 0x2A	; 42
     3f2:	71 e0       	ldi	r23, 0x01	; 1
     3f4:	8d e0       	ldi	r24, 0x0D	; 13
     3f6:	0e 94 61 01 	call	0x2c2	; 0x2c2 <CAN_Write>
     3fa:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <TX_Data>
     3fe:	6a e2       	ldi	r22, 0x2A	; 42
     400:	71 e0       	ldi	r23, 0x01	; 1
     402:	81 e3       	ldi	r24, 0x31	; 49
     404:	0e 94 61 01 	call	0x2c2	; 0x2c2 <CAN_Write>
     408:	80 e2       	ldi	r24, 0x20	; 32
     40a:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <TX_Data>
     40e:	6a e2       	ldi	r22, 0x2A	; 42
     410:	71 e0       	ldi	r23, 0x01	; 1
     412:	82 e3       	ldi	r24, 0x32	; 50
     414:	0e 94 61 01 	call	0x2c2	; 0x2c2 <CAN_Write>
     418:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <TX_Data>
     41c:	6a e2       	ldi	r22, 0x2A	; 42
     41e:	71 e0       	ldi	r23, 0x01	; 1
     420:	80 e0       	ldi	r24, 0x00	; 0
     422:	0e 94 61 01 	call	0x2c2	; 0x2c2 <CAN_Write>
     426:	6a e2       	ldi	r22, 0x2A	; 42
     428:	71 e0       	ldi	r23, 0x01	; 1
     42a:	81 e0       	ldi	r24, 0x01	; 1
     42c:	0e 94 61 01 	call	0x2c2	; 0x2c2 <CAN_Write>
     430:	80 e6       	ldi	r24, 0x60	; 96
     432:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <TX_Data>
     436:	6a e2       	ldi	r22, 0x2A	; 42
     438:	71 e0       	ldi	r23, 0x01	; 1
     43a:	0e 94 61 01 	call	0x2c2	; 0x2c2 <CAN_Write>
     43e:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <TX_Data>
     442:	4a e2       	ldi	r20, 0x2A	; 42
     444:	51 e0       	ldi	r21, 0x01	; 1
     446:	60 ee       	ldi	r22, 0xE0	; 224
     448:	8f e0       	ldi	r24, 0x0F	; 15
     44a:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <CAN_Bit_Modify>
     44e:	87 e2       	ldi	r24, 0x27	; 39
     450:	91 e0       	ldi	r25, 0x01	; 1
     452:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <RX_Data+0x1>
     456:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <RX_Data>
     45a:	68 e2       	ldi	r22, 0x28	; 40
     45c:	71 e0       	ldi	r23, 0x01	; 1
     45e:	8e e0       	ldi	r24, 0x0E	; 14
     460:	0e 94 4c 01 	call	0x298	; 0x298 <CAN_Read>
     464:	08 95       	ret

00000466 <CAN_Send_Message>:
     466:	ef 92       	push	r14
     468:	ff 92       	push	r15
     46a:	0f 93       	push	r16
     46c:	1f 93       	push	r17
     46e:	cf 93       	push	r28
     470:	89 30       	cpi	r24, 0x09	; 9
     472:	30 f5       	brcc	.+76     	; 0x4c0 <CAN_Send_Message+0x5a>
     474:	7b 01       	movw	r14, r22
     476:	c8 2f       	mov	r28, r24
     478:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <TX_Data>
     47c:	6a e2       	ldi	r22, 0x2A	; 42
     47e:	71 e0       	ldi	r23, 0x01	; 1
     480:	85 e3       	ldi	r24, 0x35	; 53
     482:	0e 94 61 01 	call	0x2c2	; 0x2c2 <CAN_Write>
     486:	cc 23       	and	r28, r28
     488:	91 f0       	breq	.+36     	; 0x4ae <CAN_Send_Message+0x48>
     48a:	87 01       	movw	r16, r14
     48c:	ec 0e       	add	r14, r28
     48e:	f1 1c       	adc	r15, r1
     490:	c6 e3       	ldi	r28, 0x36	; 54
     492:	f8 01       	movw	r30, r16
     494:	81 91       	ld	r24, Z+
     496:	8f 01       	movw	r16, r30
     498:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <TX_Data>
     49c:	6a e2       	ldi	r22, 0x2A	; 42
     49e:	71 e0       	ldi	r23, 0x01	; 1
     4a0:	8c 2f       	mov	r24, r28
     4a2:	0e 94 61 01 	call	0x2c2	; 0x2c2 <CAN_Write>
     4a6:	cf 5f       	subi	r28, 0xFF	; 255
     4a8:	0e 15       	cp	r16, r14
     4aa:	1f 05       	cpc	r17, r15
     4ac:	91 f7       	brne	.-28     	; 0x492 <CAN_Send_Message+0x2c>
     4ae:	8f ef       	ldi	r24, 0xFF	; 255
     4b0:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <TX_Data>
     4b4:	4a e2       	ldi	r20, 0x2A	; 42
     4b6:	51 e0       	ldi	r21, 0x01	; 1
     4b8:	68 e0       	ldi	r22, 0x08	; 8
     4ba:	80 e3       	ldi	r24, 0x30	; 48
     4bc:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <CAN_Bit_Modify>
     4c0:	cf 91       	pop	r28
     4c2:	1f 91       	pop	r17
     4c4:	0f 91       	pop	r16
     4c6:	ff 90       	pop	r15
     4c8:	ef 90       	pop	r14
     4ca:	08 95       	ret

000004cc <CAN_Read_Message>:
     4cc:	1f 93       	push	r17
     4ce:	cf 93       	push	r28
     4d0:	df 93       	push	r29
     4d2:	16 e6       	ldi	r17, 0x66	; 102
     4d4:	c0 e0       	ldi	r28, 0x00	; 0
     4d6:	d0 e0       	ldi	r29, 0x00	; 0
     4d8:	60 91 25 01 	lds	r22, 0x0125	; 0x800125 <a_p_Recv_List>
     4dc:	70 91 26 01 	lds	r23, 0x0126	; 0x800126 <a_p_Recv_List+0x1>
     4e0:	6c 0f       	add	r22, r28
     4e2:	7d 1f       	adc	r23, r29
     4e4:	81 2f       	mov	r24, r17
     4e6:	0e 94 4c 01 	call	0x298	; 0x298 <CAN_Read>
     4ea:	22 96       	adiw	r28, 0x02	; 2
     4ec:	1f 5f       	subi	r17, 0xFF	; 255
     4ee:	ca 30       	cpi	r28, 0x0A	; 10
     4f0:	d1 05       	cpc	r29, r1
     4f2:	91 f7       	brne	.-28     	; 0x4d8 <CAN_Read_Message+0xc>
     4f4:	df 91       	pop	r29
     4f6:	cf 91       	pop	r28
     4f8:	1f 91       	pop	r17
     4fa:	08 95       	ret

000004fc <start_eeprom_write_byte>:
     4fc:	9c 01       	movw	r18, r24
     4fe:	9f b7       	in	r25, 0x3f	; 63
     500:	f8 94       	cli
     502:	32 bd       	out	0x22, r19	; 34
     504:	21 bd       	out	0x21, r18	; 33
     506:	fb 01       	movw	r30, r22
     508:	80 81       	ld	r24, Z
     50a:	80 bd       	out	0x20, r24	; 32
     50c:	1f ba       	out	0x1f, r1	; 31
     50e:	fa 9a       	sbi	0x1f, 2	; 31
     510:	8f b3       	in	r24, 0x1f	; 31
     512:	8a 60       	ori	r24, 0x0A	; 10
     514:	8f bb       	out	0x1f, r24	; 31
     516:	9f bf       	out	0x3f, r25	; 63
     518:	08 95       	ret

0000051a <__vector_16>:
     51a:	1f 92       	push	r1
     51c:	0f 92       	push	r0
     51e:	0f b6       	in	r0, 0x3f	; 63
     520:	0f 92       	push	r0
     522:	11 24       	eor	r1, r1
     524:	2f 93       	push	r18
     526:	3f 93       	push	r19
     528:	4f 93       	push	r20
     52a:	5f 93       	push	r21
     52c:	6f 93       	push	r22
     52e:	7f 93       	push	r23
     530:	8f 93       	push	r24
     532:	9f 93       	push	r25
     534:	af 93       	push	r26
     536:	bf 93       	push	r27
     538:	cf 93       	push	r28
     53a:	ef 93       	push	r30
     53c:	ff 93       	push	r31
     53e:	fb 98       	cbi	0x1f, 3	; 31
     540:	c0 91 30 01 	lds	r28, 0x0130	; 0x800130 <Num_Bytes_Executed>
     544:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <Num_Bytes_Requested>
     548:	c8 17       	cp	r28, r24
     54a:	18 f0       	brcs	.+6      	; 0x552 <__vector_16+0x38>
     54c:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <IsBusy>
     550:	13 c0       	rjmp	.+38     	; 0x578 <__vector_16+0x5e>
     552:	8c 2f       	mov	r24, r28
     554:	90 e0       	ldi	r25, 0x00	; 0
     556:	60 91 2b 01 	lds	r22, 0x012B	; 0x80012b <p_Caller_Values>
     55a:	70 91 2c 01 	lds	r23, 0x012C	; 0x80012c <p_Caller_Values+0x1>
     55e:	68 0f       	add	r22, r24
     560:	79 1f       	adc	r23, r25
     562:	20 91 2d 01 	lds	r18, 0x012D	; 0x80012d <p_Target_EEPROM_Address>
     566:	30 91 2e 01 	lds	r19, 0x012E	; 0x80012e <p_Target_EEPROM_Address+0x1>
     56a:	82 0f       	add	r24, r18
     56c:	93 1f       	adc	r25, r19
     56e:	0e 94 7e 02 	call	0x4fc	; 0x4fc <start_eeprom_write_byte>
     572:	cf 5f       	subi	r28, 0xFF	; 255
     574:	c0 93 30 01 	sts	0x0130, r28	; 0x800130 <Num_Bytes_Executed>
     578:	ff 91       	pop	r31
     57a:	ef 91       	pop	r30
     57c:	cf 91       	pop	r28
     57e:	bf 91       	pop	r27
     580:	af 91       	pop	r26
     582:	9f 91       	pop	r25
     584:	8f 91       	pop	r24
     586:	7f 91       	pop	r23
     588:	6f 91       	pop	r22
     58a:	5f 91       	pop	r21
     58c:	4f 91       	pop	r20
     58e:	3f 91       	pop	r19
     590:	2f 91       	pop	r18
     592:	0f 90       	pop	r0
     594:	0f be       	out	0x3f, r0	; 63
     596:	0f 90       	pop	r0
     598:	1f 90       	pop	r1
     59a:	18 95       	reti

0000059c <process_event_if_pending>:
     59c:	0f 93       	push	r16
     59e:	1f 93       	push	r17
     5a0:	8b 01       	movw	r16, r22
     5a2:	9c 01       	movw	r18, r24
     5a4:	ef b7       	in	r30, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     5a6:	f8 94       	cli
     5a8:	40 91 32 01 	lds	r20, 0x0132	; 0x800132 <Pending_Events>
     5ac:	50 91 33 01 	lds	r21, 0x0133	; 0x800133 <Pending_Events+0x1>
     5b0:	60 91 34 01 	lds	r22, 0x0134	; 0x800134 <Pending_Events+0x2>
     5b4:	70 91 35 01 	lds	r23, 0x0135	; 0x800135 <Pending_Events+0x3>
     5b8:	d9 01       	movw	r26, r18
     5ba:	c8 01       	movw	r24, r16
     5bc:	84 23       	and	r24, r20
     5be:	95 23       	and	r25, r21
     5c0:	a6 23       	and	r26, r22
     5c2:	b7 23       	and	r27, r23
     5c4:	80 17       	cp	r24, r16
     5c6:	91 07       	cpc	r25, r17
     5c8:	a2 07       	cpc	r26, r18
     5ca:	b3 07       	cpc	r27, r19
     5cc:	91 f4       	brne	.+36     	; 0x5f2 <process_event_if_pending+0x56>
     5ce:	80 95       	com	r24
     5d0:	90 95       	com	r25
     5d2:	a0 95       	com	r26
     5d4:	b0 95       	com	r27
     5d6:	84 23       	and	r24, r20
     5d8:	95 23       	and	r25, r21
     5da:	a6 23       	and	r26, r22
     5dc:	b7 23       	and	r27, r23
     5de:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <Pending_Events>
     5e2:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <Pending_Events+0x1>
     5e6:	a0 93 34 01 	sts	0x0134, r26	; 0x800134 <Pending_Events+0x2>
     5ea:	b0 93 35 01 	sts	0x0135, r27	; 0x800135 <Pending_Events+0x3>
     5ee:	81 e0       	ldi	r24, 0x01	; 1
     5f0:	01 c0       	rjmp	.+2      	; 0x5f4 <process_event_if_pending+0x58>
     5f2:	80 e0       	ldi	r24, 0x00	; 0
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     5f4:	ef bf       	out	0x3f, r30	; 63
     5f6:	88 23       	and	r24, r24
     5f8:	21 f0       	breq	.+8      	; 0x602 <process_event_if_pending+0x66>
     5fa:	c9 01       	movw	r24, r18
     5fc:	b8 01       	movw	r22, r16
     5fe:	0e 94 a6 03 	call	0x74c	; 0x74c <Run_Services>
     602:	1f 91       	pop	r17
     604:	0f 91       	pop	r16
     606:	08 95       	ret

00000608 <Post_Event>:
     608:	cf 92       	push	r12
     60a:	df 92       	push	r13
     60c:	ef 92       	push	r14
     60e:	ff 92       	push	r15
     610:	2f b7       	in	r18, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     612:	f8 94       	cli
     614:	c0 90 32 01 	lds	r12, 0x0132	; 0x800132 <Pending_Events>
     618:	d0 90 33 01 	lds	r13, 0x0133	; 0x800133 <Pending_Events+0x1>
     61c:	e0 90 34 01 	lds	r14, 0x0134	; 0x800134 <Pending_Events+0x2>
     620:	f0 90 35 01 	lds	r15, 0x0135	; 0x800135 <Pending_Events+0x3>
     624:	dc 01       	movw	r26, r24
     626:	cb 01       	movw	r24, r22
     628:	8c 29       	or	r24, r12
     62a:	9d 29       	or	r25, r13
     62c:	ae 29       	or	r26, r14
     62e:	bf 29       	or	r27, r15
     630:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <Pending_Events>
     634:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <Pending_Events+0x1>
     638:	a0 93 34 01 	sts	0x0134, r26	; 0x800134 <Pending_Events+0x2>
     63c:	b0 93 35 01 	sts	0x0135, r27	; 0x800135 <Pending_Events+0x3>
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     640:	2f bf       	out	0x3f, r18	; 63
     642:	ff 90       	pop	r15
     644:	ef 90       	pop	r14
     646:	df 90       	pop	r13
     648:	cf 90       	pop	r12
     64a:	08 95       	ret

0000064c <Run_Events>:
     64c:	61 e0       	ldi	r22, 0x01	; 1
     64e:	70 e0       	ldi	r23, 0x00	; 0
     650:	80 e0       	ldi	r24, 0x00	; 0
     652:	90 e0       	ldi	r25, 0x00	; 0
     654:	0e 94 ce 02 	call	0x59c	; 0x59c <process_event_if_pending>
     658:	62 e0       	ldi	r22, 0x02	; 2
     65a:	70 e0       	ldi	r23, 0x00	; 0
     65c:	80 e0       	ldi	r24, 0x00	; 0
     65e:	90 e0       	ldi	r25, 0x00	; 0
     660:	0e 94 ce 02 	call	0x59c	; 0x59c <process_event_if_pending>
     664:	64 e0       	ldi	r22, 0x04	; 4
     666:	70 e0       	ldi	r23, 0x00	; 0
     668:	80 e0       	ldi	r24, 0x00	; 0
     66a:	90 e0       	ldi	r25, 0x00	; 0
     66c:	0e 94 ce 02 	call	0x59c	; 0x59c <process_event_if_pending>
     670:	68 e0       	ldi	r22, 0x08	; 8
     672:	70 e0       	ldi	r23, 0x00	; 0
     674:	80 e0       	ldi	r24, 0x00	; 0
     676:	90 e0       	ldi	r25, 0x00	; 0
     678:	0e 94 ce 02 	call	0x59c	; 0x59c <process_event_if_pending>
     67c:	60 e1       	ldi	r22, 0x10	; 16
     67e:	70 e0       	ldi	r23, 0x00	; 0
     680:	80 e0       	ldi	r24, 0x00	; 0
     682:	90 e0       	ldi	r25, 0x00	; 0
     684:	0e 94 ce 02 	call	0x59c	; 0x59c <process_event_if_pending>
     688:	60 e2       	ldi	r22, 0x20	; 32
     68a:	70 e0       	ldi	r23, 0x00	; 0
     68c:	80 e0       	ldi	r24, 0x00	; 0
     68e:	90 e0       	ldi	r25, 0x00	; 0
     690:	0e 94 ce 02 	call	0x59c	; 0x59c <process_event_if_pending>
     694:	60 e4       	ldi	r22, 0x40	; 64
     696:	70 e0       	ldi	r23, 0x00	; 0
     698:	80 e0       	ldi	r24, 0x00	; 0
     69a:	90 e0       	ldi	r25, 0x00	; 0
     69c:	0e 94 ce 02 	call	0x59c	; 0x59c <process_event_if_pending>
     6a0:	60 e8       	ldi	r22, 0x80	; 128
     6a2:	70 e0       	ldi	r23, 0x00	; 0
     6a4:	80 e0       	ldi	r24, 0x00	; 0
     6a6:	90 e0       	ldi	r25, 0x00	; 0
     6a8:	0e 94 ce 02 	call	0x59c	; 0x59c <process_event_if_pending>
     6ac:	60 e0       	ldi	r22, 0x00	; 0
     6ae:	71 e0       	ldi	r23, 0x01	; 1
     6b0:	80 e0       	ldi	r24, 0x00	; 0
     6b2:	90 e0       	ldi	r25, 0x00	; 0
     6b4:	0e 94 ce 02 	call	0x59c	; 0x59c <process_event_if_pending>
     6b8:	60 e0       	ldi	r22, 0x00	; 0
     6ba:	72 e0       	ldi	r23, 0x02	; 2
     6bc:	80 e0       	ldi	r24, 0x00	; 0
     6be:	90 e0       	ldi	r25, 0x00	; 0
     6c0:	0e 94 ce 02 	call	0x59c	; 0x59c <process_event_if_pending>
     6c4:	60 e0       	ldi	r22, 0x00	; 0
     6c6:	74 e0       	ldi	r23, 0x04	; 4
     6c8:	80 e0       	ldi	r24, 0x00	; 0
     6ca:	90 e0       	ldi	r25, 0x00	; 0
     6cc:	0e 94 ce 02 	call	0x59c	; 0x59c <process_event_if_pending>
     6d0:	60 e0       	ldi	r22, 0x00	; 0
     6d2:	78 e0       	ldi	r23, 0x08	; 8
     6d4:	80 e0       	ldi	r24, 0x00	; 0
     6d6:	90 e0       	ldi	r25, 0x00	; 0
     6d8:	0e 94 ce 02 	call	0x59c	; 0x59c <process_event_if_pending>
     6dc:	60 e0       	ldi	r22, 0x00	; 0
     6de:	70 e1       	ldi	r23, 0x10	; 16
     6e0:	80 e0       	ldi	r24, 0x00	; 0
     6e2:	90 e0       	ldi	r25, 0x00	; 0
     6e4:	0e 94 ce 02 	call	0x59c	; 0x59c <process_event_if_pending>
     6e8:	60 e0       	ldi	r22, 0x00	; 0
     6ea:	70 e2       	ldi	r23, 0x20	; 32
     6ec:	80 e0       	ldi	r24, 0x00	; 0
     6ee:	90 e0       	ldi	r25, 0x00	; 0
     6f0:	0e 94 ce 02 	call	0x59c	; 0x59c <process_event_if_pending>
     6f4:	60 e0       	ldi	r22, 0x00	; 0
     6f6:	70 e4       	ldi	r23, 0x40	; 64
     6f8:	80 e0       	ldi	r24, 0x00	; 0
     6fa:	90 e0       	ldi	r25, 0x00	; 0
     6fc:	0e 94 ce 02 	call	0x59c	; 0x59c <process_event_if_pending>
     700:	60 e0       	ldi	r22, 0x00	; 0
     702:	70 e8       	ldi	r23, 0x80	; 128
     704:	80 e0       	ldi	r24, 0x00	; 0
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	0e 94 ce 02 	call	0x59c	; 0x59c <process_event_if_pending>
     70c:	60 e0       	ldi	r22, 0x00	; 0
     70e:	70 e0       	ldi	r23, 0x00	; 0
     710:	81 e0       	ldi	r24, 0x01	; 1
     712:	90 e0       	ldi	r25, 0x00	; 0
     714:	0e 94 ce 02 	call	0x59c	; 0x59c <process_event_if_pending>
     718:	60 e0       	ldi	r22, 0x00	; 0
     71a:	70 e0       	ldi	r23, 0x00	; 0
     71c:	82 e0       	ldi	r24, 0x02	; 2
     71e:	90 e0       	ldi	r25, 0x00	; 0
     720:	0e 94 ce 02 	call	0x59c	; 0x59c <process_event_if_pending>
     724:	60 e0       	ldi	r22, 0x00	; 0
     726:	70 e0       	ldi	r23, 0x00	; 0
     728:	84 e0       	ldi	r24, 0x04	; 4
     72a:	90 e0       	ldi	r25, 0x00	; 0
     72c:	0e 94 ce 02 	call	0x59c	; 0x59c <process_event_if_pending>
     730:	8d cf       	rjmp	.-230    	; 0x64c <Run_Events>

00000732 <Initialize_Framework>:
     732:	0e 94 e6 06 	call	0xdcc	; 0xdcc <Init_Timer_Module>
     736:	0e 94 59 04 	call	0x8b2	; 0x8b2 <Init_Modem_Service>
     73a:	0e 94 36 0a 	call	0x146c	; 0x146c <Init_UART_Service>
     73e:	0e 94 bb 03 	call	0x776	; 0x776 <Init_IOC_Module>
     742:	0e 94 3a 04 	call	0x874	; 0x874 <Init_LIN_XCVR_WD_Kicker>
     746:	0e 94 93 06 	call	0xd26	; 0xd26 <Init_SPI_Service>
     74a:	08 95       	ret

0000074c <Run_Services>:
     74c:	cf 92       	push	r12
     74e:	df 92       	push	r13
     750:	ef 92       	push	r14
     752:	ff 92       	push	r15
     754:	6b 01       	movw	r12, r22
     756:	7c 01       	movw	r14, r24
     758:	0e 94 78 04 	call	0x8f0	; 0x8f0 <Run_Modem_Service>
     75c:	c7 01       	movw	r24, r14
     75e:	b6 01       	movw	r22, r12
     760:	0e 94 39 0a 	call	0x1472	; 0x1472 <Run_UART_Service>
     764:	c7 01       	movw	r24, r14
     766:	b6 01       	movw	r22, r12
     768:	0e 94 98 06 	call	0xd30	; 0xd30 <Run_SPI_Service>
     76c:	ff 90       	pop	r15
     76e:	ef 90       	pop	r14
     770:	df 90       	pop	r13
     772:	cf 90       	pop	r12
     774:	08 95       	ret

00000776 <Init_IOC_Module>:
     776:	26 98       	cbi	0x04, 6	; 4
     778:	e9 e6       	ldi	r30, 0x69	; 105
     77a:	f0 e0       	ldi	r31, 0x00	; 0
     77c:	80 81       	ld	r24, Z
     77e:	8e 7f       	andi	r24, 0xFE	; 254
     780:	80 83       	st	Z, r24
     782:	80 81       	ld	r24, Z
     784:	82 60       	ori	r24, 0x02	; 2
     786:	80 83       	st	Z, r24
     788:	e8 9a       	sbi	0x1d, 0	; 29
     78a:	e0 9a       	sbi	0x1c, 0	; 28
     78c:	08 95       	ret

0000078e <query_counter>:
     78e:	60 91 36 01 	lds	r22, 0x0136	; 0x800136 <counter>
     792:	70 91 37 01 	lds	r23, 0x0137	; 0x800137 <counter+0x1>
     796:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <counter+0x2>
     79a:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <counter+0x3>
     79e:	08 95       	ret

000007a0 <__vector_1>:
     7a0:	1f 92       	push	r1
     7a2:	0f 92       	push	r0
     7a4:	0f b6       	in	r0, 0x3f	; 63
     7a6:	0f 92       	push	r0
     7a8:	11 24       	eor	r1, r1
     7aa:	2f 93       	push	r18
     7ac:	3f 93       	push	r19
     7ae:	4f 93       	push	r20
     7b0:	5f 93       	push	r21
     7b2:	6f 93       	push	r22
     7b4:	7f 93       	push	r23
     7b6:	8f 93       	push	r24
     7b8:	9f 93       	push	r25
     7ba:	af 93       	push	r26
     7bc:	bf 93       	push	r27
     7be:	ef 93       	push	r30
     7c0:	ff 93       	push	r31
     7c2:	cf 93       	push	r28
     7c4:	df 93       	push	r29
     7c6:	1f 92       	push	r1
     7c8:	cd b7       	in	r28, 0x3d	; 61
     7ca:	de b7       	in	r29, 0x3e	; 62
     7cc:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <counter>
     7d0:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <counter+0x1>
     7d4:	a0 91 38 01 	lds	r26, 0x0138	; 0x800138 <counter+0x2>
     7d8:	b0 91 39 01 	lds	r27, 0x0139	; 0x800139 <counter+0x3>
     7dc:	01 96       	adiw	r24, 0x01	; 1
     7de:	a1 1d       	adc	r26, r1
     7e0:	b1 1d       	adc	r27, r1
     7e2:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <counter>
     7e6:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <counter+0x1>
     7ea:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <counter+0x2>
     7ee:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <counter+0x3>
     7f2:	0e 94 66 02 	call	0x4cc	; 0x4cc <CAN_Read_Message>
     7f6:	19 82       	std	Y+1, r1	; 0x01
     7f8:	ae 01       	movw	r20, r28
     7fa:	4f 5f       	subi	r20, 0xFF	; 255
     7fc:	5f 4f       	sbci	r21, 0xFF	; 255
     7fe:	60 e4       	ldi	r22, 0x40	; 64
     800:	8d e2       	ldi	r24, 0x2D	; 45
     802:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <CAN_Bit_Modify>
     806:	ae 01       	movw	r20, r28
     808:	4f 5f       	subi	r20, 0xFF	; 255
     80a:	5f 4f       	sbci	r21, 0xFF	; 255
     80c:	6f ef       	ldi	r22, 0xFF	; 255
     80e:	8c e2       	ldi	r24, 0x2C	; 44
     810:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <CAN_Bit_Modify>
     814:	0f 90       	pop	r0
     816:	df 91       	pop	r29
     818:	cf 91       	pop	r28
     81a:	ff 91       	pop	r31
     81c:	ef 91       	pop	r30
     81e:	bf 91       	pop	r27
     820:	af 91       	pop	r26
     822:	9f 91       	pop	r25
     824:	8f 91       	pop	r24
     826:	7f 91       	pop	r23
     828:	6f 91       	pop	r22
     82a:	5f 91       	pop	r21
     82c:	4f 91       	pop	r20
     82e:	3f 91       	pop	r19
     830:	2f 91       	pop	r18
     832:	0f 90       	pop	r0
     834:	0f be       	out	0x3f, r0	; 63
     836:	0f 90       	pop	r0
     838:	1f 90       	pop	r1
     83a:	18 95       	reti

0000083c <kick_LIN_XCVR_WD>:
     83c:	90 91 3a 01 	lds	r25, 0x013A	; 0x80013a <Parity>
     840:	81 e0       	ldi	r24, 0x01	; 1
     842:	89 27       	eor	r24, r25
     844:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <Parity>
     848:	81 11       	cpse	r24, r1
     84a:	0a c0       	rjmp	.+20     	; 0x860 <kick_LIN_XCVR_WD+0x24>
     84c:	13 98       	cbi	0x02, 3	; 2
     84e:	42 e0       	ldi	r20, 0x02	; 2
     850:	50 e0       	ldi	r21, 0x00	; 0
     852:	60 e0       	ldi	r22, 0x00	; 0
     854:	70 e0       	ldi	r23, 0x00	; 0
     856:	8b e3       	ldi	r24, 0x3B	; 59
     858:	91 e0       	ldi	r25, 0x01	; 1
     85a:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <Start_Timer>
     85e:	08 95       	ret
     860:	13 9a       	sbi	0x02, 3	; 2
     862:	43 e2       	ldi	r20, 0x23	; 35
     864:	50 e0       	ldi	r21, 0x00	; 0
     866:	60 e0       	ldi	r22, 0x00	; 0
     868:	70 e0       	ldi	r23, 0x00	; 0
     86a:	8b e3       	ldi	r24, 0x3B	; 59
     86c:	91 e0       	ldi	r25, 0x01	; 1
     86e:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <Start_Timer>
     872:	08 95       	ret

00000874 <Init_LIN_XCVR_WD_Kicker>:
     874:	13 9a       	sbi	0x02, 3	; 2
     876:	0b 9a       	sbi	0x01, 3	; 1
     878:	6e e1       	ldi	r22, 0x1E	; 30
     87a:	74 e0       	ldi	r23, 0x04	; 4
     87c:	8b e3       	ldi	r24, 0x3B	; 59
     87e:	91 e0       	ldi	r25, 0x01	; 1
     880:	0e 94 0c 07 	call	0xe18	; 0xe18 <Register_Timer>
     884:	43 e2       	ldi	r20, 0x23	; 35
     886:	50 e0       	ldi	r21, 0x00	; 0
     888:	60 e0       	ldi	r22, 0x00	; 0
     88a:	70 e0       	ldi	r23, 0x00	; 0
     88c:	8b e3       	ldi	r24, 0x3B	; 59
     88e:	91 e0       	ldi	r25, 0x01	; 1
     890:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <Start_Timer>
     894:	08 95       	ret

00000896 <main>:
     896:	f8 94       	cli
     898:	e1 e6       	ldi	r30, 0x61	; 97
     89a:	f0 e0       	ldi	r31, 0x00	; 0
     89c:	80 e8       	ldi	r24, 0x80	; 128
     89e:	80 83       	st	Z, r24
     8a0:	10 82       	st	Z, r1
     8a2:	0e 94 99 03 	call	0x732	; 0x732 <Initialize_Framework>
     8a6:	78 94       	sei
     8a8:	0e 94 26 03 	call	0x64c	; 0x64c <Run_Events>
     8ac:	80 e0       	ldi	r24, 0x00	; 0
     8ae:	90 e0       	ldi	r25, 0x00	; 0
     8b0:	08 95       	ret

000008b2 <Init_Modem_Service>:

****************************************************************************/
void Init_Modem_Service(void)
{
   // Initialize UART
	UART_Initialize(Modem_Recv_Data);
     8b2:	8f e3       	ldi	r24, 0x3F	; 63
     8b4:	91 e0       	ldi	r25, 0x01	; 1
     8b6:	0e 94 15 08 	call	0x102a	; 0x102a <UART_Initialize>
	Register_Timer(&Testing_Timer, Post_Event);
     8ba:	64 e0       	ldi	r22, 0x04	; 4
     8bc:	73 e0       	ldi	r23, 0x03	; 3
     8be:	81 e1       	ldi	r24, 0x11	; 17
     8c0:	91 e0       	ldi	r25, 0x01	; 1
     8c2:	0e 94 0c 07 	call	0xe18	; 0xe18 <Register_Timer>
    PORTB &= ~(1<<PINB2);
     8c6:	2a 98       	cbi	0x05, 2	; 5
    DDRB |= (1<<PINB2);
     8c8:	22 9a       	sbi	0x04, 2	; 4
	
	// Register CAN Init 1 timer with Post_Event()
	Register_Timer(&CAN_Timer, Post_Event);
     8ca:	64 e0       	ldi	r22, 0x04	; 4
     8cc:	73 e0       	ldi	r23, 0x03	; 3
     8ce:	8f e1       	ldi	r24, 0x1F	; 31
     8d0:	91 e0       	ldi	r25, 0x01	; 1
     8d2:	0e 94 0c 07 	call	0xe18	; 0xe18 <Register_Timer>

	// Kick off CAN Init 1 Timer
	Start_Timer(&CAN_Timer, CAN_INIT_1_MS);
     8d6:	48 ec       	ldi	r20, 0xC8	; 200
     8d8:	50 e0       	ldi	r21, 0x00	; 0
     8da:	60 e0       	ldi	r22, 0x00	; 0
     8dc:	70 e0       	ldi	r23, 0x00	; 0
     8de:	8f e1       	ldi	r24, 0x1F	; 31
     8e0:	91 e0       	ldi	r25, 0x01	; 1
     8e2:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <Start_Timer>

	// Call 1st step of the CAN initialization
	// This will only start once we exit initialization context
	CAN_Initialize_1(a_p_CAN_Volatile_Msg);
     8e6:	85 e1       	ldi	r24, 0x15	; 21
     8e8:	91 e0       	ldi	r25, 0x01	; 1
     8ea:	0e 94 99 01 	call	0x332	; 0x332 <CAN_Initialize_1>
     8ee:	08 95       	ret

000008f0 <Run_Modem_Service>:
    Description
        Processes events for the master node

****************************************************************************/
void Run_Modem_Service(uint32_t event_mask)
{
     8f0:	0f 93       	push	r16
    switch(event_mask)
     8f2:	61 15       	cp	r22, r1
     8f4:	20 e8       	ldi	r18, 0x80	; 128
     8f6:	72 07       	cpc	r23, r18
     8f8:	81 05       	cpc	r24, r1
     8fa:	91 05       	cpc	r25, r1
     8fc:	09 f4       	brne	.+2      	; 0x900 <Run_Modem_Service+0x10>
     8fe:	42 c0       	rjmp	.+132    	; 0x984 <Run_Modem_Service+0x94>
     900:	61 15       	cp	r22, r1
     902:	71 05       	cpc	r23, r1
     904:	21 e0       	ldi	r18, 0x01	; 1
     906:	82 07       	cpc	r24, r18
     908:	91 05       	cpc	r25, r1
     90a:	31 f0       	breq	.+12     	; 0x918 <Run_Modem_Service+0x28>
     90c:	60 34       	cpi	r22, 0x40	; 64
     90e:	71 05       	cpc	r23, r1
     910:	81 05       	cpc	r24, r1
     912:	91 05       	cpc	r25, r1
     914:	e9 f5       	brne	.+122    	; 0x990 <Run_Modem_Service+0xa0>
     916:	0b c0       	rjmp	.+22     	; 0x92e <Run_Modem_Service+0x3e>

		 case EVT_CAN_INIT_1_COMPLETE:
		        // The time for CAN 1 has expired

		        // Call step two of the CAN init
		        CAN_Initialize_2();
     918:	0e 94 e6 01 	call	0x3cc	; 0x3cc <CAN_Initialize_2>
				
				Start_Timer(&Testing_Timer, 200);
     91c:	48 ec       	ldi	r20, 0xC8	; 200
     91e:	50 e0       	ldi	r21, 0x00	; 0
     920:	60 e0       	ldi	r22, 0x00	; 0
     922:	70 e0       	ldi	r23, 0x00	; 0
     924:	81 e1       	ldi	r24, 0x11	; 17
     926:	91 e0       	ldi	r25, 0x01	; 1
     928:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <Start_Timer>
		        
		        break;
     92c:	31 c0       	rjmp	.+98     	; 0x990 <Run_Modem_Service+0xa0>
				
        case EVT_TEST_TIMEOUT:
			if (do_init_modem)
     92e:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <do_init_modem>
     932:	88 23       	and	r24, r24
     934:	61 f0       	breq	.+24     	; 0x94e <Run_Modem_Service+0x5e>
			{
				Write_UART(3, 0, &TX_Data[0], &RX_Data[0], true);
     936:	01 e0       	ldi	r16, 0x01	; 1
     938:	2f e0       	ldi	r18, 0x0F	; 15
     93a:	31 e0       	ldi	r19, 0x01	; 1
     93c:	4d e0       	ldi	r20, 0x0D	; 13
     93e:	51 e0       	ldi	r21, 0x01	; 1
     940:	60 e0       	ldi	r22, 0x00	; 0
     942:	83 e0       	ldi	r24, 0x03	; 3
     944:	0e 94 9a 08 	call	0x1134	; 0x1134 <Write_UART>
				do_init_modem = false;
     948:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <do_init_modem>
     94c:	06 c0       	rjmp	.+12     	; 0x95a <Run_Modem_Service+0x6a>
			}
			else
			{
				CAN_Send_Message(5, TX_Away);
     94e:	68 e0       	ldi	r22, 0x08	; 8
     950:	71 e0       	ldi	r23, 0x01	; 1
     952:	85 e0       	ldi	r24, 0x05	; 5
     954:	90 e0       	ldi	r25, 0x00	; 0
     956:	0e 94 33 02 	call	0x466	; 0x466 <CAN_Send_Message>
				//Write_UART(2, 0, &TX_Data[0], &RX_Data[0], false);
			}
			
			if (flipper)
     95a:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <flipper>
     95e:	88 23       	and	r24, r24
     960:	21 f0       	breq	.+8      	; 0x96a <Run_Modem_Service+0x7a>
			{
				PORTB |= (1<<PINB2);
     962:	2a 9a       	sbi	0x05, 2	; 5
				flipper = false;
     964:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <flipper>
     968:	04 c0       	rjmp	.+8      	; 0x972 <Run_Modem_Service+0x82>
			}
			else
			{
				PORTB &= ~(1<<PINB2);
     96a:	2a 98       	cbi	0x05, 2	; 5
				flipper = true;
     96c:	81 e0       	ldi	r24, 0x01	; 1
     96e:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <flipper>
			}
				
			Start_Timer(&Testing_Timer, 250);
     972:	4a ef       	ldi	r20, 0xFA	; 250
     974:	50 e0       	ldi	r21, 0x00	; 0
     976:	60 e0       	ldi	r22, 0x00	; 0
     978:	70 e0       	ldi	r23, 0x00	; 0
     97a:	81 e1       	ldi	r24, 0x11	; 17
     97c:	91 e0       	ldi	r25, 0x01	; 1
     97e:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <Start_Timer>
			break;
     982:	06 c0       	rjmp	.+12     	; 0x990 <Run_Modem_Service+0xa0>
		
		case EVT_MODEM_NEW_PACKAGE:
		
			//Modem_Recv_Data =  //{CAN_MODEM_POS_TYPE, 0x00, 0x00, 0x00, 0x00};
			//write_rect_vect(&TX_Away[CAN_MODEM_POS_VECT_IDX], test_positions[test_counter]);
			CAN_Send_Message(5, Modem_Recv_Data);
     984:	6f e3       	ldi	r22, 0x3F	; 63
     986:	71 e0       	ldi	r23, 0x01	; 1
     988:	85 e0       	ldi	r24, 0x05	; 5
     98a:	90 e0       	ldi	r25, 0x00	; 0
     98c:	0e 94 33 02 	call	0x466	; 0x466 <CAN_Send_Message>
			break;
		
        default:
            break;
    }
}
     990:	0f 91       	pop	r16
     992:	08 95       	ret

00000994 <SPI_Initialize>:
     994:	cf 93       	push	r28
     996:	df 93       	push	r29
     998:	10 92 a4 01 	sts	0x01A4, r1	; 0x8001a4 <Master_Slave_Identifier>
     99c:	81 b1       	in	r24, 0x01	; 1
     99e:	80 67       	ori	r24, 0x70	; 112
     9a0:	81 b9       	out	0x01, r24	; 1
     9a2:	80 ed       	ldi	r24, 0xD0	; 208
     9a4:	8c bd       	out	0x2c, r24	; 44
     9a6:	16 9a       	sbi	0x02, 6	; 2
     9a8:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <Buffer_Index>
     9ac:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <TX_Index>
     9b0:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <RX_Index>
     9b4:	ed e6       	ldi	r30, 0x6D	; 109
     9b6:	f1 e0       	ldi	r31, 0x01	; 1
     9b8:	a4 e5       	ldi	r26, 0x54	; 84
     9ba:	b1 e0       	ldi	r27, 0x01	; 1
     9bc:	28 e6       	ldi	r18, 0x68	; 104
     9be:	31 e0       	ldi	r19, 0x01	; 1
     9c0:	8f ef       	ldi	r24, 0xFF	; 255
     9c2:	ef 01       	movw	r28, r30
     9c4:	25 97       	sbiw	r28, 0x05	; 5
     9c6:	88 83       	st	Y, r24
     9c8:	21 96       	adiw	r28, 0x01	; 1
     9ca:	88 83       	st	Y, r24
     9cc:	21 96       	adiw	r28, 0x01	; 1
     9ce:	88 83       	st	Y, r24
     9d0:	21 96       	adiw	r28, 0x01	; 1
     9d2:	88 83       	st	Y, r24
     9d4:	21 96       	adiw	r28, 0x01	; 1
     9d6:	88 83       	st	Y, r24
     9d8:	80 83       	st	Z, r24
     9da:	1d 92       	st	X+, r1
     9dc:	1d 92       	st	X+, r1
     9de:	36 96       	adiw	r30, 0x06	; 6
     9e0:	a2 17       	cp	r26, r18
     9e2:	b3 07       	cpc	r27, r19
     9e4:	71 f7       	brne	.-36     	; 0x9c2 <SPI_Initialize+0x2e>
     9e6:	df 91       	pop	r29
     9e8:	cf 91       	pop	r28
     9ea:	08 95       	ret

000009ec <SPI_Start_Command>:
     9ec:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <Buffer_Index>
     9f0:	90 e0       	ldi	r25, 0x00	; 0
     9f2:	fc 01       	movw	r30, r24
     9f4:	ee 0f       	add	r30, r30
     9f6:	ff 1f       	adc	r31, r31
     9f8:	df 01       	movw	r26, r30
     9fa:	a8 0f       	add	r26, r24
     9fc:	b9 1f       	adc	r27, r25
     9fe:	aa 0f       	add	r26, r26
     a00:	bb 1f       	adc	r27, r27
     a02:	a8 59       	subi	r26, 0x98	; 152
     a04:	be 4f       	sbci	r27, 0xFE	; 254
     a06:	2c 91       	ld	r18, X
     a08:	20 93 4f 01 	sts	0x014F, r18	; 0x80014f <Expected_TX_Length>
     a0c:	fd 01       	movw	r30, r26
     a0e:	81 81       	ldd	r24, Z+1	; 0x01
     a10:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <Expected_RX_Length>
     a14:	2f 3f       	cpi	r18, 0xFF	; 255
     a16:	19 f4       	brne	.+6      	; 0xa1e <SPI_Start_Command+0x32>
     a18:	91 e0       	ldi	r25, 0x01	; 1
     a1a:	90 93 4f 01 	sts	0x014F, r25	; 0x80014f <Expected_TX_Length>
     a1e:	8f 3f       	cpi	r24, 0xFF	; 255
     a20:	11 f4       	brne	.+4      	; 0xa26 <SPI_Start_Command+0x3a>
     a22:	10 92 4e 01 	sts	0x014E, r1	; 0x80014e <Expected_RX_Length>
     a26:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <RX_Index>
     a2a:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <TX_Index>
     a2e:	81 e0       	ldi	r24, 0x01	; 1
     a30:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <In_Tx>
     a34:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <Expected_TX_Length>
     a38:	8f 3f       	cpi	r24, 0xFF	; 255
     a3a:	99 f4       	brne	.+38     	; 0xa62 <SPI_Start_Command+0x76>
     a3c:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <counter_value>
     a40:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <counter_value+0x1>
     a44:	a0 91 4b 01 	lds	r26, 0x014B	; 0x80014b <counter_value+0x2>
     a48:	b0 91 4c 01 	lds	r27, 0x014C	; 0x80014c <counter_value+0x3>
     a4c:	01 96       	adiw	r24, 0x01	; 1
     a4e:	a1 1d       	adc	r26, r1
     a50:	b1 1d       	adc	r27, r1
     a52:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <counter_value>
     a56:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <counter_value+0x1>
     a5a:	a0 93 4b 01 	sts	0x014B, r26	; 0x80014b <counter_value+0x2>
     a5e:	b0 93 4c 01 	sts	0x014C, r27	; 0x80014c <counter_value+0x3>
     a62:	16 98       	cbi	0x02, 6	; 2
     a64:	08 95       	ret

00000a66 <SPI_End_Command>:
     a66:	16 9a       	sbi	0x02, 6	; 2
     a68:	08 95       	ret

00000a6a <SPI_Transmit>:
     a6a:	20 91 53 01 	lds	r18, 0x0153	; 0x800153 <Buffer_Index>
     a6e:	30 91 50 01 	lds	r19, 0x0150	; 0x800150 <TX_Index>
     a72:	82 2f       	mov	r24, r18
     a74:	90 e0       	ldi	r25, 0x00	; 0
     a76:	82 0f       	add	r24, r18
     a78:	91 1d       	adc	r25, r1
     a7a:	82 0f       	add	r24, r18
     a7c:	91 1d       	adc	r25, r1
     a7e:	fc 01       	movw	r30, r24
     a80:	ee 0f       	add	r30, r30
     a82:	ff 1f       	adc	r31, r31
     a84:	e8 59       	subi	r30, 0x98	; 152
     a86:	fe 4f       	sbci	r31, 0xFE	; 254
     a88:	e3 0f       	add	r30, r19
     a8a:	f1 1d       	adc	r31, r1
     a8c:	82 81       	ldd	r24, Z+2	; 0x02
     a8e:	8e bd       	out	0x2e, r24	; 46
     a90:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <In_Tx>
     a94:	88 23       	and	r24, r24
     a96:	31 f0       	breq	.+12     	; 0xaa4 <SPI_Transmit+0x3a>
     a98:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <TX_Index>
     a9c:	8f 5f       	subi	r24, 0xFF	; 255
     a9e:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <TX_Index>
     aa2:	08 95       	ret
     aa4:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <TX_Index>
     aa8:	8f 5f       	subi	r24, 0xFF	; 255
     aaa:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <TX_Index>
     aae:	08 95       	ret

00000ab0 <Write_SPI>:
     ab0:	af 92       	push	r10
     ab2:	bf 92       	push	r11
     ab4:	cf 92       	push	r12
     ab6:	df 92       	push	r13
     ab8:	ef 92       	push	r14
     aba:	ff 92       	push	r15
     abc:	0f 93       	push	r16
     abe:	1f 93       	push	r17
     ac0:	cf 93       	push	r28
     ac2:	df 93       	push	r29
     ac4:	d8 2e       	mov	r13, r24
     ac6:	c6 2e       	mov	r12, r22
     ac8:	ea 01       	movw	r28, r20
     aca:	79 01       	movw	r14, r18
     acc:	0e 94 c7 03 	call	0x78e	; 0x78e <query_counter>
     ad0:	60 93 49 01 	sts	0x0149, r22	; 0x800149 <counter_value>
     ad4:	70 93 4a 01 	sts	0x014A, r23	; 0x80014a <counter_value+0x1>
     ad8:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <counter_value+0x2>
     adc:	90 93 4c 01 	sts	0x014C, r25	; 0x80014c <counter_value+0x3>
     ae0:	8d 2d       	mov	r24, r13
     ae2:	90 e0       	ldi	r25, 0x00	; 0
     ae4:	8c 01       	movw	r16, r24
     ae6:	0e 5f       	subi	r16, 0xFE	; 254
     ae8:	1f 4f       	sbci	r17, 0xFF	; 255
     aea:	20 91 52 01 	lds	r18, 0x0152	; 0x800152 <Next_Available_Row>
     aee:	30 e0       	ldi	r19, 0x00	; 0
     af0:	de 01       	movw	r26, r28
     af2:	12 97       	sbiw	r26, 0x02	; 2
     af4:	c9 01       	movw	r24, r18
     af6:	88 0f       	add	r24, r24
     af8:	99 1f       	adc	r25, r25
     afa:	82 0f       	add	r24, r18
     afc:	93 1f       	adc	r25, r19
     afe:	88 0f       	add	r24, r24
     b00:	99 1f       	adc	r25, r25
     b02:	e0 e0       	ldi	r30, 0x00	; 0
     b04:	f0 e0       	ldi	r31, 0x00	; 0
     b06:	9c 01       	movw	r18, r24
     b08:	28 59       	subi	r18, 0x98	; 152
     b0a:	3e 4f       	sbci	r19, 0xFE	; 254
     b0c:	59 01       	movw	r10, r18
     b0e:	2f 5f       	subi	r18, 0xFF	; 255
     b10:	3f 4f       	sbci	r19, 0xFF	; 255
     b12:	30 97       	sbiw	r30, 0x00	; 0
     b14:	19 f4       	brne	.+6      	; 0xb1c <Write_SPI+0x6c>
     b16:	e5 01       	movw	r28, r10
     b18:	d8 82       	st	Y, r13
     b1a:	0e c0       	rjmp	.+28     	; 0xb38 <Write_SPI+0x88>
     b1c:	e1 30       	cpi	r30, 0x01	; 1
     b1e:	f1 05       	cpc	r31, r1
     b20:	19 f4       	brne	.+6      	; 0xb28 <Write_SPI+0x78>
     b22:	e9 01       	movw	r28, r18
     b24:	c8 82       	st	Y, r12
     b26:	08 c0       	rjmp	.+16     	; 0xb38 <Write_SPI+0x88>
     b28:	6c 91       	ld	r22, X
     b2a:	af 01       	movw	r20, r30
     b2c:	48 0f       	add	r20, r24
     b2e:	59 1f       	adc	r21, r25
     b30:	48 59       	subi	r20, 0x98	; 152
     b32:	5e 4f       	sbci	r21, 0xFE	; 254
     b34:	ea 01       	movw	r28, r20
     b36:	68 83       	st	Y, r22
     b38:	31 96       	adiw	r30, 0x01	; 1
     b3a:	11 96       	adiw	r26, 0x01	; 1
     b3c:	e0 17       	cp	r30, r16
     b3e:	f1 07       	cpc	r31, r17
     b40:	44 f3       	brlt	.-48     	; 0xb12 <Write_SPI+0x62>
     b42:	32 c0       	rjmp	.+100    	; 0xba8 <Write_SPI+0xf8>
     b44:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <Next_Available_Row>
     b48:	89 30       	cpi	r24, 0x09	; 9
     b4a:	19 f4       	brne	.+6      	; 0xb52 <Write_SPI+0xa2>
     b4c:	10 92 52 01 	sts	0x0152, r1	; 0x800152 <Next_Available_Row>
     b50:	03 c0       	rjmp	.+6      	; 0xb58 <Write_SPI+0xa8>
     b52:	8f 5f       	subi	r24, 0xFF	; 255
     b54:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <Next_Available_Row>
     b58:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <Query_SPI_State>
     b5c:	81 11       	cpse	r24, r1
     b5e:	27 c0       	rjmp	.+78     	; 0xbae <Write_SPI+0xfe>
     b60:	20 91 53 01 	lds	r18, 0x0153	; 0x800153 <Buffer_Index>
     b64:	82 2f       	mov	r24, r18
     b66:	90 e0       	ldi	r25, 0x00	; 0
     b68:	82 0f       	add	r24, r18
     b6a:	91 1d       	adc	r25, r1
     b6c:	82 0f       	add	r24, r18
     b6e:	91 1d       	adc	r25, r1
     b70:	88 0f       	add	r24, r24
     b72:	99 1f       	adc	r25, r25
     b74:	fc 01       	movw	r30, r24
     b76:	e8 59       	subi	r30, 0x98	; 152
     b78:	fe 4f       	sbci	r31, 0xFE	; 254
     b7a:	80 81       	ld	r24, Z
     b7c:	8f 3f       	cpi	r24, 0xFF	; 255
     b7e:	b9 f0       	breq	.+46     	; 0xbae <Write_SPI+0xfe>
     b80:	60 e0       	ldi	r22, 0x00	; 0
     b82:	78 e0       	ldi	r23, 0x08	; 8
     b84:	80 e0       	ldi	r24, 0x00	; 0
     b86:	90 e0       	ldi	r25, 0x00	; 0
     b88:	0e 94 04 03 	call	0x608	; 0x608 <Post_Event>
     b8c:	10 c0       	rjmp	.+32     	; 0xbae <Write_SPI+0xfe>
     b8e:	f7 01       	movw	r30, r14
     b90:	80 81       	ld	r24, Z
     b92:	91 81       	ldd	r25, Z+1	; 0x01
     b94:	e0 91 52 01 	lds	r30, 0x0152	; 0x800152 <Next_Available_Row>
     b98:	f0 e0       	ldi	r31, 0x00	; 0
     b9a:	ee 0f       	add	r30, r30
     b9c:	ff 1f       	adc	r31, r31
     b9e:	ec 5a       	subi	r30, 0xAC	; 172
     ba0:	fe 4f       	sbci	r31, 0xFE	; 254
     ba2:	91 83       	std	Z+1, r25	; 0x01
     ba4:	80 83       	st	Z, r24
     ba6:	ce cf       	rjmp	.-100    	; 0xb44 <Write_SPI+0x94>
     ba8:	c1 10       	cpse	r12, r1
     baa:	f1 cf       	rjmp	.-30     	; 0xb8e <Write_SPI+0xde>
     bac:	cb cf       	rjmp	.-106    	; 0xb44 <Write_SPI+0x94>
     bae:	df 91       	pop	r29
     bb0:	cf 91       	pop	r28
     bb2:	1f 91       	pop	r17
     bb4:	0f 91       	pop	r16
     bb6:	ff 90       	pop	r15
     bb8:	ef 90       	pop	r14
     bba:	df 90       	pop	r13
     bbc:	cf 90       	pop	r12
     bbe:	bf 90       	pop	r11
     bc0:	af 90       	pop	r10
     bc2:	08 95       	ret

00000bc4 <__vector_14>:
     bc4:	1f 92       	push	r1
     bc6:	0f 92       	push	r0
     bc8:	0f b6       	in	r0, 0x3f	; 63
     bca:	0f 92       	push	r0
     bcc:	11 24       	eor	r1, r1
     bce:	2f 93       	push	r18
     bd0:	3f 93       	push	r19
     bd2:	4f 93       	push	r20
     bd4:	5f 93       	push	r21
     bd6:	6f 93       	push	r22
     bd8:	7f 93       	push	r23
     bda:	8f 93       	push	r24
     bdc:	9f 93       	push	r25
     bde:	af 93       	push	r26
     be0:	bf 93       	push	r27
     be2:	ef 93       	push	r30
     be4:	ff 93       	push	r31
     be6:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <Master_Slave_Identifier>
     bea:	81 11       	cpse	r24, r1
     bec:	8b c0       	rjmp	.+278    	; 0xd04 <__vector_14+0x140>
     bee:	8d b5       	in	r24, 0x2d	; 45
     bf0:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <In_Tx>
     bf4:	88 23       	and	r24, r24
     bf6:	e1 f0       	breq	.+56     	; 0xc30 <__vector_14+0x6c>
     bf8:	90 91 50 01 	lds	r25, 0x0150	; 0x800150 <TX_Index>
     bfc:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <Expected_TX_Length>
     c00:	89 17       	cp	r24, r25
     c02:	a0 f0       	brcs	.+40     	; 0xc2c <__vector_14+0x68>
     c04:	98 13       	cpse	r25, r24
     c06:	07 c0       	rjmp	.+14     	; 0xc16 <__vector_14+0x52>
     c08:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <Expected_RX_Length>
     c0c:	81 11       	cpse	r24, r1
     c0e:	03 c0       	rjmp	.+6      	; 0xc16 <__vector_14+0x52>
     c10:	10 92 4d 01 	sts	0x014D, r1	; 0x80014d <In_Tx>
     c14:	0d c0       	rjmp	.+26     	; 0xc30 <__vector_14+0x6c>
     c16:	60 e0       	ldi	r22, 0x00	; 0
     c18:	70 e1       	ldi	r23, 0x10	; 16
     c1a:	80 e0       	ldi	r24, 0x00	; 0
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	0e 94 04 03 	call	0x608	; 0x608 <Post_Event>
     c22:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <In_Tx>
     c26:	81 11       	cpse	r24, r1
     c28:	6d c0       	rjmp	.+218    	; 0xd04 <__vector_14+0x140>
     c2a:	02 c0       	rjmp	.+4      	; 0xc30 <__vector_14+0x6c>
     c2c:	10 92 4d 01 	sts	0x014D, r1	; 0x80014d <In_Tx>
     c30:	90 91 4e 01 	lds	r25, 0x014E	; 0x80014e <Expected_RX_Length>
     c34:	99 23       	and	r25, r25
     c36:	09 f1       	breq	.+66     	; 0xc7a <__vector_14+0xb6>
     c38:	80 91 51 01 	lds	r24, 0x0151	; 0x800151 <RX_Index>
     c3c:	20 91 53 01 	lds	r18, 0x0153	; 0x800153 <Buffer_Index>
     c40:	e8 2f       	mov	r30, r24
     c42:	f0 e0       	ldi	r31, 0x00	; 0
     c44:	e2 0f       	add	r30, r18
     c46:	f1 1d       	adc	r31, r1
     c48:	ee 0f       	add	r30, r30
     c4a:	ff 1f       	adc	r31, r31
     c4c:	ec 5a       	subi	r30, 0xAC	; 172
     c4e:	fe 4f       	sbci	r31, 0xFE	; 254
     c50:	01 90       	ld	r0, Z+
     c52:	f0 81       	ld	r31, Z
     c54:	e0 2d       	mov	r30, r0
     c56:	30 97       	sbiw	r30, 0x00	; 0
     c58:	11 f4       	brne	.+4      	; 0xc5e <__vector_14+0x9a>
     c5a:	2e b5       	in	r18, 0x2e	; 46
     c5c:	02 c0       	rjmp	.+4      	; 0xc62 <__vector_14+0x9e>
     c5e:	2e b5       	in	r18, 0x2e	; 46
     c60:	20 83       	st	Z, r18
     c62:	8f 5f       	subi	r24, 0xFF	; 255
     c64:	80 93 51 01 	sts	0x0151, r24	; 0x800151 <RX_Index>
     c68:	89 17       	cp	r24, r25
     c6a:	38 f4       	brcc	.+14     	; 0xc7a <__vector_14+0xb6>
     c6c:	60 e0       	ldi	r22, 0x00	; 0
     c6e:	70 e2       	ldi	r23, 0x20	; 32
     c70:	80 e0       	ldi	r24, 0x00	; 0
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	0e 94 04 03 	call	0x608	; 0x608 <Post_Event>
     c78:	45 c0       	rjmp	.+138    	; 0xd04 <__vector_14+0x140>
     c7a:	30 91 53 01 	lds	r19, 0x0153	; 0x800153 <Buffer_Index>
     c7e:	83 2f       	mov	r24, r19
     c80:	90 e0       	ldi	r25, 0x00	; 0
     c82:	ac 01       	movw	r20, r24
     c84:	44 0f       	add	r20, r20
     c86:	55 1f       	adc	r21, r21
     c88:	fa 01       	movw	r30, r20
     c8a:	e8 0f       	add	r30, r24
     c8c:	f9 1f       	adc	r31, r25
     c8e:	ee 0f       	add	r30, r30
     c90:	ff 1f       	adc	r31, r31
     c92:	e8 59       	subi	r30, 0x98	; 152
     c94:	fe 4f       	sbci	r31, 0xFE	; 254
     c96:	2f ef       	ldi	r18, 0xFF	; 255
     c98:	20 83       	st	Z, r18
     c9a:	21 83       	std	Z+1, r18	; 0x01
     c9c:	22 83       	std	Z+2, r18	; 0x02
     c9e:	23 83       	std	Z+3, r18	; 0x03
     ca0:	24 83       	std	Z+4, r18	; 0x04
     ca2:	fa 01       	movw	r30, r20
     ca4:	e8 0f       	add	r30, r24
     ca6:	f9 1f       	adc	r31, r25
     ca8:	ee 0f       	add	r30, r30
     caa:	ff 1f       	adc	r31, r31
     cac:	e8 59       	subi	r30, 0x98	; 152
     cae:	fe 4f       	sbci	r31, 0xFE	; 254
     cb0:	25 83       	std	Z+5, r18	; 0x05
     cb2:	fa 01       	movw	r30, r20
     cb4:	ec 5a       	subi	r30, 0xAC	; 172
     cb6:	fe 4f       	sbci	r31, 0xFE	; 254
     cb8:	11 82       	std	Z+1, r1	; 0x01
     cba:	10 82       	st	Z, r1
     cbc:	39 30       	cpi	r19, 0x09	; 9
     cbe:	19 f4       	brne	.+6      	; 0xcc6 <__vector_14+0x102>
     cc0:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <Buffer_Index>
     cc4:	03 c0       	rjmp	.+6      	; 0xccc <__vector_14+0x108>
     cc6:	3f 5f       	subi	r19, 0xFF	; 255
     cc8:	30 93 53 01 	sts	0x0153, r19	; 0x800153 <Buffer_Index>
     ccc:	20 91 53 01 	lds	r18, 0x0153	; 0x800153 <Buffer_Index>
     cd0:	82 2f       	mov	r24, r18
     cd2:	90 e0       	ldi	r25, 0x00	; 0
     cd4:	82 0f       	add	r24, r18
     cd6:	91 1d       	adc	r25, r1
     cd8:	82 0f       	add	r24, r18
     cda:	91 1d       	adc	r25, r1
     cdc:	88 0f       	add	r24, r24
     cde:	99 1f       	adc	r25, r25
     ce0:	fc 01       	movw	r30, r24
     ce2:	e8 59       	subi	r30, 0x98	; 152
     ce4:	fe 4f       	sbci	r31, 0xFE	; 254
     ce6:	80 81       	ld	r24, Z
     ce8:	8f 3f       	cpi	r24, 0xFF	; 255
     cea:	31 f0       	breq	.+12     	; 0xcf8 <__vector_14+0x134>
     cec:	60 e0       	ldi	r22, 0x00	; 0
     cee:	78 e0       	ldi	r23, 0x08	; 8
     cf0:	80 e0       	ldi	r24, 0x00	; 0
     cf2:	90 e0       	ldi	r25, 0x00	; 0
     cf4:	0e 94 04 03 	call	0x608	; 0x608 <Post_Event>
     cf8:	60 e0       	ldi	r22, 0x00	; 0
     cfa:	70 e4       	ldi	r23, 0x40	; 64
     cfc:	80 e0       	ldi	r24, 0x00	; 0
     cfe:	90 e0       	ldi	r25, 0x00	; 0
     d00:	0e 94 04 03 	call	0x608	; 0x608 <Post_Event>
     d04:	ff 91       	pop	r31
     d06:	ef 91       	pop	r30
     d08:	bf 91       	pop	r27
     d0a:	af 91       	pop	r26
     d0c:	9f 91       	pop	r25
     d0e:	8f 91       	pop	r24
     d10:	7f 91       	pop	r23
     d12:	6f 91       	pop	r22
     d14:	5f 91       	pop	r21
     d16:	4f 91       	pop	r20
     d18:	3f 91       	pop	r19
     d1a:	2f 91       	pop	r18
     d1c:	0f 90       	pop	r0
     d1e:	0f be       	out	0x3f, r0	; 63
     d20:	0f 90       	pop	r0
     d22:	1f 90       	pop	r1
     d24:	18 95       	reti

00000d26 <Init_SPI_Service>:
     d26:	10 92 a5 01 	sts	0x01A5, r1	; 0x8001a5 <Current_State>
     d2a:	0e 94 ca 04 	call	0x994	; 0x994 <SPI_Initialize>
     d2e:	08 95       	ret

00000d30 <Run_SPI_Service>:
     d30:	20 91 a5 01 	lds	r18, 0x01A5	; 0x8001a5 <Current_State>
     d34:	21 30       	cpi	r18, 0x01	; 1
     d36:	a9 f0       	breq	.+42     	; 0xd62 <Run_SPI_Service+0x32>
     d38:	18 f0       	brcs	.+6      	; 0xd40 <Run_SPI_Service+0x10>
     d3a:	22 30       	cpi	r18, 0x02	; 2
     d3c:	89 f1       	breq	.+98     	; 0xda0 <Run_SPI_Service+0x70>
     d3e:	08 95       	ret
     d40:	61 15       	cp	r22, r1
     d42:	78 40       	sbci	r23, 0x08	; 8
     d44:	81 05       	cpc	r24, r1
     d46:	91 05       	cpc	r25, r1
     d48:	e9 f5       	brne	.+122    	; 0xdc4 <Run_SPI_Service+0x94>
     d4a:	0e 94 f6 04 	call	0x9ec	; 0x9ec <SPI_Start_Command>
     d4e:	81 e0       	ldi	r24, 0x01	; 1
     d50:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <Current_State>
     d54:	60 e0       	ldi	r22, 0x00	; 0
     d56:	70 e1       	ldi	r23, 0x10	; 16
     d58:	80 e0       	ldi	r24, 0x00	; 0
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	0e 94 04 03 	call	0x608	; 0x608 <Post_Event>
     d60:	08 95       	ret
     d62:	61 15       	cp	r22, r1
     d64:	20 e1       	ldi	r18, 0x10	; 16
     d66:	72 07       	cpc	r23, r18
     d68:	81 05       	cpc	r24, r1
     d6a:	91 05       	cpc	r25, r1
     d6c:	19 f4       	brne	.+6      	; 0xd74 <Run_SPI_Service+0x44>
     d6e:	0e 94 35 05 	call	0xa6a	; 0xa6a <SPI_Transmit>
     d72:	08 95       	ret
     d74:	61 15       	cp	r22, r1
     d76:	20 e2       	ldi	r18, 0x20	; 32
     d78:	72 07       	cpc	r23, r18
     d7a:	81 05       	cpc	r24, r1
     d7c:	91 05       	cpc	r25, r1
     d7e:	31 f4       	brne	.+12     	; 0xd8c <Run_SPI_Service+0x5c>
     d80:	0e 94 35 05 	call	0xa6a	; 0xa6a <SPI_Transmit>
     d84:	82 e0       	ldi	r24, 0x02	; 2
     d86:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <Current_State>
     d8a:	08 95       	ret
     d8c:	61 15       	cp	r22, r1
     d8e:	70 44       	sbci	r23, 0x40	; 64
     d90:	81 05       	cpc	r24, r1
     d92:	91 05       	cpc	r25, r1
     d94:	b9 f4       	brne	.+46     	; 0xdc4 <Run_SPI_Service+0x94>
     d96:	0e 94 33 05 	call	0xa66	; 0xa66 <SPI_End_Command>
     d9a:	10 92 a5 01 	sts	0x01A5, r1	; 0x8001a5 <Current_State>
     d9e:	08 95       	ret
     da0:	61 15       	cp	r22, r1
     da2:	20 e2       	ldi	r18, 0x20	; 32
     da4:	72 07       	cpc	r23, r18
     da6:	81 05       	cpc	r24, r1
     da8:	91 05       	cpc	r25, r1
     daa:	19 f4       	brne	.+6      	; 0xdb2 <Run_SPI_Service+0x82>
     dac:	0e 94 35 05 	call	0xa6a	; 0xa6a <SPI_Transmit>
     db0:	08 95       	ret
     db2:	61 15       	cp	r22, r1
     db4:	70 44       	sbci	r23, 0x40	; 64
     db6:	81 05       	cpc	r24, r1
     db8:	91 05       	cpc	r25, r1
     dba:	21 f4       	brne	.+8      	; 0xdc4 <Run_SPI_Service+0x94>
     dbc:	0e 94 33 05 	call	0xa66	; 0xa66 <SPI_End_Command>
     dc0:	10 92 a5 01 	sts	0x01A5, r1	; 0x8001a5 <Current_State>
     dc4:	08 95       	ret

00000dc6 <Query_SPI_State>:
     dc6:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <Current_State>
     dca:	08 95       	ret

00000dcc <Init_Timer_Module>:
     dcc:	e6 ea       	ldi	r30, 0xA6	; 166
     dce:	f1 e0       	ldi	r31, 0x01	; 1
     dd0:	aa ea       	ldi	r26, 0xAA	; 170
     dd2:	b1 e0       	ldi	r27, 0x01	; 1
     dd4:	87 ee       	ldi	r24, 0xE7	; 231
     dd6:	91 e0       	ldi	r25, 0x01	; 1
     dd8:	11 82       	std	Z+1, r1	; 0x01
     dda:	10 82       	st	Z, r1
     ddc:	13 82       	std	Z+3, r1	; 0x03
     dde:	12 82       	std	Z+2, r1	; 0x02
     de0:	1c 92       	st	X, r1
     de2:	15 82       	std	Z+5, r1	; 0x05
     de4:	16 82       	std	Z+6, r1	; 0x06
     de6:	17 82       	std	Z+7, r1	; 0x07
     de8:	10 86       	std	Z+8, r1	; 0x08
     dea:	11 86       	std	Z+9, r1	; 0x09
     dec:	12 86       	std	Z+10, r1	; 0x0a
     dee:	13 86       	std	Z+11, r1	; 0x0b
     df0:	14 86       	std	Z+12, r1	; 0x0c
     df2:	3d 96       	adiw	r30, 0x0d	; 13
     df4:	1d 96       	adiw	r26, 0x0d	; 13
     df6:	e8 17       	cp	r30, r24
     df8:	f9 07       	cpc	r31, r25
     dfa:	71 f7       	brne	.-36     	; 0xdd8 <Init_Timer_Module+0xc>
     dfc:	15 bc       	out	0x25, r1	; 37
     dfe:	16 bc       	out	0x26, r1	; 38
     e00:	18 bc       	out	0x28, r1	; 40
     e02:	88 b5       	in	r24, 0x28	; 40
     e04:	83 58       	subi	r24, 0x83	; 131
     e06:	88 bd       	out	0x28, r24	; 40
     e08:	82 e0       	ldi	r24, 0x02	; 2
     e0a:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__EEPROM_REGION_LENGTH__+0x7f006e>
     e0e:	16 bc       	out	0x26, r1	; 38
     e10:	86 b5       	in	r24, 0x26	; 38
     e12:	83 60       	ori	r24, 0x03	; 3
     e14:	86 bd       	out	0x26, r24	; 38
     e16:	08 95       	ret

00000e18 <Register_Timer>:
     e18:	cf 93       	push	r28
     e1a:	df 93       	push	r29
     e1c:	c0 91 a6 01 	lds	r28, 0x01A6	; 0x8001a6 <Timers>
     e20:	d0 91 a7 01 	lds	r29, 0x01A7	; 0x8001a7 <Timers+0x1>
     e24:	c8 17       	cp	r28, r24
     e26:	d9 07       	cpc	r29, r25
     e28:	09 f4       	brne	.+2      	; 0xe2c <Register_Timer+0x14>
     e2a:	43 c0       	rjmp	.+134    	; 0xeb2 <Register_Timer+0x9a>
     e2c:	a6 ea       	ldi	r26, 0xA6	; 166
     e2e:	b1 e0       	ldi	r27, 0x01	; 1
     e30:	4a ed       	ldi	r20, 0xDA	; 218
     e32:	51 e0       	ldi	r21, 0x01	; 1
     e34:	fd 01       	movw	r30, r26
     e36:	25 85       	ldd	r18, Z+13	; 0x0d
     e38:	36 85       	ldd	r19, Z+14	; 0x0e
     e3a:	28 17       	cp	r18, r24
     e3c:	39 07       	cpc	r19, r25
     e3e:	c9 f1       	breq	.+114    	; 0xeb2 <Register_Timer+0x9a>
     e40:	3d 96       	adiw	r30, 0x0d	; 13
     e42:	e4 17       	cp	r30, r20
     e44:	f5 07       	cpc	r31, r21
     e46:	b9 f7       	brne	.-18     	; 0xe36 <Register_Timer+0x1e>
     e48:	2f c0       	rjmp	.+94     	; 0xea8 <Register_Timer+0x90>
     e4a:	1d 96       	adiw	r26, 0x0d	; 13
     e4c:	4d 91       	ld	r20, X+
     e4e:	5c 91       	ld	r21, X
     e50:	1e 97       	sbiw	r26, 0x0e	; 14
     e52:	45 2b       	or	r20, r21
     e54:	11 f5       	brne	.+68     	; 0xe9a <Register_Timer+0x82>
     e56:	02 c0       	rjmp	.+4      	; 0xe5c <Register_Timer+0x44>
     e58:	20 e0       	ldi	r18, 0x00	; 0
     e5a:	30 e0       	ldi	r19, 0x00	; 0
     e5c:	4f b7       	in	r20, 0x3f	; 63
     e5e:	f8 94       	cli
     e60:	f9 01       	movw	r30, r18
     e62:	ee 0f       	add	r30, r30
     e64:	ff 1f       	adc	r31, r31
     e66:	e2 0f       	add	r30, r18
     e68:	f3 1f       	adc	r31, r19
     e6a:	ee 0f       	add	r30, r30
     e6c:	ff 1f       	adc	r31, r31
     e6e:	ee 0f       	add	r30, r30
     e70:	ff 1f       	adc	r31, r31
     e72:	2e 0f       	add	r18, r30
     e74:	3f 1f       	adc	r19, r31
     e76:	f9 01       	movw	r30, r18
     e78:	ea 55       	subi	r30, 0x5A	; 90
     e7a:	fe 4f       	sbci	r31, 0xFE	; 254
     e7c:	91 83       	std	Z+1, r25	; 0x01
     e7e:	80 83       	st	Z, r24
     e80:	73 83       	std	Z+3, r23	; 0x03
     e82:	62 83       	std	Z+2, r22	; 0x02
     e84:	14 82       	std	Z+4, r1	; 0x04
     e86:	15 82       	std	Z+5, r1	; 0x05
     e88:	16 82       	std	Z+6, r1	; 0x06
     e8a:	17 82       	std	Z+7, r1	; 0x07
     e8c:	10 86       	std	Z+8, r1	; 0x08
     e8e:	11 86       	std	Z+9, r1	; 0x09
     e90:	12 86       	std	Z+10, r1	; 0x0a
     e92:	13 86       	std	Z+11, r1	; 0x0b
     e94:	14 86       	std	Z+12, r1	; 0x0c
     e96:	4f bf       	out	0x3f, r20	; 63
     e98:	0c c0       	rjmp	.+24     	; 0xeb2 <Register_Timer+0x9a>
     e9a:	2f 5f       	subi	r18, 0xFF	; 255
     e9c:	3f 4f       	sbci	r19, 0xFF	; 255
     e9e:	1d 96       	adiw	r26, 0x0d	; 13
     ea0:	25 30       	cpi	r18, 0x05	; 5
     ea2:	31 05       	cpc	r19, r1
     ea4:	91 f6       	brne	.-92     	; 0xe4a <Register_Timer+0x32>
     ea6:	05 c0       	rjmp	.+10     	; 0xeb2 <Register_Timer+0x9a>
     ea8:	cd 2b       	or	r28, r29
     eaa:	b1 f2       	breq	.-84     	; 0xe58 <Register_Timer+0x40>
     eac:	21 e0       	ldi	r18, 0x01	; 1
     eae:	30 e0       	ldi	r19, 0x00	; 0
     eb0:	cc cf       	rjmp	.-104    	; 0xe4a <Register_Timer+0x32>
     eb2:	df 91       	pop	r29
     eb4:	cf 91       	pop	r28
     eb6:	08 95       	ret

00000eb8 <Start_Timer>:
     eb8:	cf 92       	push	r12
     eba:	df 92       	push	r13
     ebc:	ef 92       	push	r14
     ebe:	ff 92       	push	r15
     ec0:	20 91 a6 01 	lds	r18, 0x01A6	; 0x8001a6 <Timers>
     ec4:	30 91 a7 01 	lds	r19, 0x01A7	; 0x8001a7 <Timers+0x1>
     ec8:	28 17       	cp	r18, r24
     eca:	39 07       	cpc	r19, r25
     ecc:	51 f0       	breq	.+20     	; 0xee2 <Start_Timer+0x2a>
     ece:	e6 ea       	ldi	r30, 0xA6	; 166
     ed0:	f1 e0       	ldi	r31, 0x01	; 1
     ed2:	21 e0       	ldi	r18, 0x01	; 1
     ed4:	30 e0       	ldi	r19, 0x00	; 0
     ed6:	a5 85       	ldd	r26, Z+13	; 0x0d
     ed8:	b6 85       	ldd	r27, Z+14	; 0x0e
     eda:	a8 17       	cp	r26, r24
     edc:	b9 07       	cpc	r27, r25
     ede:	29 f5       	brne	.+74     	; 0xf2a <Start_Timer+0x72>
     ee0:	02 c0       	rjmp	.+4      	; 0xee6 <Start_Timer+0x2e>
     ee2:	20 e0       	ldi	r18, 0x00	; 0
     ee4:	30 e0       	ldi	r19, 0x00	; 0
     ee6:	8f b7       	in	r24, 0x3f	; 63
     ee8:	f8 94       	cli
     eea:	f9 01       	movw	r30, r18
     eec:	ee 0f       	add	r30, r30
     eee:	ff 1f       	adc	r31, r31
     ef0:	e2 0f       	add	r30, r18
     ef2:	f3 1f       	adc	r31, r19
     ef4:	ee 0f       	add	r30, r30
     ef6:	ff 1f       	adc	r31, r31
     ef8:	ee 0f       	add	r30, r30
     efa:	ff 1f       	adc	r31, r31
     efc:	2e 0f       	add	r18, r30
     efe:	3f 1f       	adc	r19, r31
     f00:	f9 01       	movw	r30, r18
     f02:	ea 55       	subi	r30, 0x5A	; 90
     f04:	fe 4f       	sbci	r31, 0xFE	; 254
     f06:	91 e0       	ldi	r25, 0x01	; 1
     f08:	94 83       	std	Z+4, r25	; 0x04
     f0a:	15 82       	std	Z+5, r1	; 0x05
     f0c:	16 82       	std	Z+6, r1	; 0x06
     f0e:	17 82       	std	Z+7, r1	; 0x07
     f10:	10 86       	std	Z+8, r1	; 0x08
     f12:	6a 01       	movw	r12, r20
     f14:	7b 01       	movw	r14, r22
     f16:	cc 0c       	add	r12, r12
     f18:	dd 1c       	adc	r13, r13
     f1a:	ee 1c       	adc	r14, r14
     f1c:	ff 1c       	adc	r15, r15
     f1e:	c1 86       	std	Z+9, r12	; 0x09
     f20:	d2 86       	std	Z+10, r13	; 0x0a
     f22:	e3 86       	std	Z+11, r14	; 0x0b
     f24:	f4 86       	std	Z+12, r15	; 0x0c
     f26:	8f bf       	out	0x3f, r24	; 63
     f28:	06 c0       	rjmp	.+12     	; 0xf36 <Start_Timer+0x7e>
     f2a:	2f 5f       	subi	r18, 0xFF	; 255
     f2c:	3f 4f       	sbci	r19, 0xFF	; 255
     f2e:	3d 96       	adiw	r30, 0x0d	; 13
     f30:	25 30       	cpi	r18, 0x05	; 5
     f32:	31 05       	cpc	r19, r1
     f34:	81 f6       	brne	.-96     	; 0xed6 <Start_Timer+0x1e>
     f36:	ff 90       	pop	r15
     f38:	ef 90       	pop	r14
     f3a:	df 90       	pop	r13
     f3c:	cf 90       	pop	r12
     f3e:	08 95       	ret

00000f40 <__vector_10>:
     f40:	1f 92       	push	r1
     f42:	0f 92       	push	r0
     f44:	0f b6       	in	r0, 0x3f	; 63
     f46:	0f 92       	push	r0
     f48:	11 24       	eor	r1, r1
     f4a:	ef 92       	push	r14
     f4c:	ff 92       	push	r15
     f4e:	0f 93       	push	r16
     f50:	1f 93       	push	r17
     f52:	2f 93       	push	r18
     f54:	3f 93       	push	r19
     f56:	4f 93       	push	r20
     f58:	5f 93       	push	r21
     f5a:	6f 93       	push	r22
     f5c:	7f 93       	push	r23
     f5e:	8f 93       	push	r24
     f60:	9f 93       	push	r25
     f62:	af 93       	push	r26
     f64:	bf 93       	push	r27
     f66:	cf 93       	push	r28
     f68:	df 93       	push	r29
     f6a:	ef 93       	push	r30
     f6c:	ff 93       	push	r31
     f6e:	88 b5       	in	r24, 0x28	; 40
     f70:	83 58       	subi	r24, 0x83	; 131
     f72:	88 bd       	out	0x28, r24	; 40
     f74:	0a ea       	ldi	r16, 0xAA	; 170
     f76:	11 e0       	ldi	r17, 0x01	; 1
     f78:	c6 ea       	ldi	r28, 0xA6	; 166
     f7a:	d1 e0       	ldi	r29, 0x01	; 1
     f7c:	0f 2e       	mov	r0, r31
     f7e:	f7 ee       	ldi	r31, 0xE7	; 231
     f80:	ef 2e       	mov	r14, r31
     f82:	f1 e0       	ldi	r31, 0x01	; 1
     f84:	ff 2e       	mov	r15, r31
     f86:	f0 2d       	mov	r31, r0
     f88:	f8 01       	movw	r30, r16
     f8a:	80 81       	ld	r24, Z
     f8c:	88 23       	and	r24, r24
     f8e:	81 f1       	breq	.+96     	; 0xff0 <__vector_10+0xb0>
     f90:	9e 01       	movw	r18, r28
     f92:	89 85       	ldd	r24, Y+9	; 0x09
     f94:	9a 85       	ldd	r25, Y+10	; 0x0a
     f96:	ab 85       	ldd	r26, Y+11	; 0x0b
     f98:	bc 85       	ldd	r27, Y+12	; 0x0c
     f9a:	00 97       	sbiw	r24, 0x00	; 0
     f9c:	a1 05       	cpc	r26, r1
     f9e:	b1 05       	cpc	r27, r1
     fa0:	b9 f0       	breq	.+46     	; 0xfd0 <__vector_10+0x90>
     fa2:	4d 81       	ldd	r20, Y+5	; 0x05
     fa4:	5e 81       	ldd	r21, Y+6	; 0x06
     fa6:	6f 81       	ldd	r22, Y+7	; 0x07
     fa8:	78 85       	ldd	r23, Y+8	; 0x08
     faa:	4f 5f       	subi	r20, 0xFF	; 255
     fac:	5f 4f       	sbci	r21, 0xFF	; 255
     fae:	6f 4f       	sbci	r22, 0xFF	; 255
     fb0:	7f 4f       	sbci	r23, 0xFF	; 255
     fb2:	4d 83       	std	Y+5, r20	; 0x05
     fb4:	5e 83       	std	Y+6, r21	; 0x06
     fb6:	6f 83       	std	Y+7, r22	; 0x07
     fb8:	78 87       	std	Y+8, r23	; 0x08
     fba:	01 97       	sbiw	r24, 0x01	; 1
     fbc:	a1 09       	sbc	r26, r1
     fbe:	b1 09       	sbc	r27, r1
     fc0:	89 87       	std	Y+9, r24	; 0x09
     fc2:	9a 87       	std	Y+10, r25	; 0x0a
     fc4:	ab 87       	std	Y+11, r26	; 0x0b
     fc6:	bc 87       	std	Y+12, r27	; 0x0c
     fc8:	89 2b       	or	r24, r25
     fca:	8a 2b       	or	r24, r26
     fcc:	8b 2b       	or	r24, r27
     fce:	81 f4       	brne	.+32     	; 0xff0 <__vector_10+0xb0>
     fd0:	10 82       	st	Z, r1
     fd2:	d9 01       	movw	r26, r18
     fd4:	12 96       	adiw	r26, 0x02	; 2
     fd6:	ed 91       	ld	r30, X+
     fd8:	fc 91       	ld	r31, X
     fda:	13 97       	sbiw	r26, 0x03	; 3
     fdc:	30 97       	sbiw	r30, 0x00	; 0
     fde:	41 f0       	breq	.+16     	; 0xff0 <__vector_10+0xb0>
     fe0:	8d 91       	ld	r24, X+
     fe2:	9c 91       	ld	r25, X
     fe4:	dc 01       	movw	r26, r24
     fe6:	6d 91       	ld	r22, X+
     fe8:	7d 91       	ld	r23, X+
     fea:	8d 91       	ld	r24, X+
     fec:	9c 91       	ld	r25, X
     fee:	09 95       	icall
     ff0:	03 5f       	subi	r16, 0xF3	; 243
     ff2:	1f 4f       	sbci	r17, 0xFF	; 255
     ff4:	2d 96       	adiw	r28, 0x0d	; 13
     ff6:	ce 15       	cp	r28, r14
     ff8:	df 05       	cpc	r29, r15
     ffa:	31 f6       	brne	.-116    	; 0xf88 <__vector_10+0x48>
     ffc:	ff 91       	pop	r31
     ffe:	ef 91       	pop	r30
    1000:	df 91       	pop	r29
    1002:	cf 91       	pop	r28
    1004:	bf 91       	pop	r27
    1006:	af 91       	pop	r26
    1008:	9f 91       	pop	r25
    100a:	8f 91       	pop	r24
    100c:	7f 91       	pop	r23
    100e:	6f 91       	pop	r22
    1010:	5f 91       	pop	r21
    1012:	4f 91       	pop	r20
    1014:	3f 91       	pop	r19
    1016:	2f 91       	pop	r18
    1018:	1f 91       	pop	r17
    101a:	0f 91       	pop	r16
    101c:	ff 90       	pop	r15
    101e:	ef 90       	pop	r14
    1020:	0f 90       	pop	r0
    1022:	0f be       	out	0x3f, r0	; 63
    1024:	0f 90       	pop	r0
    1026:	1f 90       	pop	r1
    1028:	18 95       	reti

0000102a <UART_Initialize>:
    102a:	2d 98       	cbi	0x05, 5	; 5
    102c:	25 9a       	sbi	0x04, 5	; 4
    102e:	e8 ec       	ldi	r30, 0xC8	; 200
    1030:	f0 e0       	ldi	r31, 0x00	; 0
    1032:	20 81       	ld	r18, Z
    1034:	20 68       	ori	r18, 0x80	; 128
    1036:	20 83       	st	Z, r18
    1038:	2e e0       	ldi	r18, 0x0E	; 14
    103a:	20 83       	st	Z, r18
    103c:	20 e8       	ldi	r18, 0x80	; 128
    103e:	20 93 cc 00 	sts	0x00CC, r18	; 0x8000cc <__EEPROM_REGION_LENGTH__+0x7f00cc>
    1042:	2c e0       	ldi	r18, 0x0C	; 12
    1044:	20 93 cd 00 	sts	0x00CD, r18	; 0x8000cd <__EEPROM_REGION_LENGTH__+0x7f00cd>
    1048:	10 92 ce 00 	sts	0x00CE, r1	; 0x8000ce <__EEPROM_REGION_LENGTH__+0x7f00ce>
    104c:	21 e0       	ldi	r18, 0x01	; 1
    104e:	20 93 ca 00 	sts	0x00CA, r18	; 0x8000ca <__EEPROM_REGION_LENGTH__+0x7f00ca>
    1052:	10 92 f8 01 	sts	0x01F8, r1	; 0x8001f8 <Buffer_Index>
    1056:	10 92 f5 01 	sts	0x01F5, r1	; 0x8001f5 <TX_Index>
    105a:	10 92 f6 01 	sts	0x01F6, r1	; 0x8001f6 <RX_Index>
    105e:	90 93 e8 01 	sts	0x01E8, r25	; 0x8001e8 <Modem_Recv_Data+0x1>
    1062:	80 93 e7 01 	sts	0x01E7, r24	; 0x8001e7 <Modem_Recv_Data>
    1066:	ed ef       	ldi	r30, 0xFD	; 253
    1068:	f1 e0       	ldi	r31, 0x01	; 1
    106a:	8f ef       	ldi	r24, 0xFF	; 255
    106c:	80 83       	st	Z, r24
    106e:	81 83       	std	Z+1, r24	; 0x01
    1070:	82 83       	std	Z+2, r24	; 0x02
    1072:	83 83       	std	Z+3, r24	; 0x03
    1074:	a9 ef       	ldi	r26, 0xF9	; 249
    1076:	b1 e0       	ldi	r27, 0x01	; 1
    1078:	11 96       	adiw	r26, 0x01	; 1
    107a:	1c 92       	st	X, r1
    107c:	1e 92       	st	-X, r1
    107e:	84 83       	std	Z+4, r24	; 0x04
    1080:	85 83       	std	Z+5, r24	; 0x05
    1082:	86 83       	std	Z+6, r24	; 0x06
    1084:	87 83       	std	Z+7, r24	; 0x07
    1086:	13 96       	adiw	r26, 0x03	; 3
    1088:	1c 92       	st	X, r1
    108a:	1e 92       	st	-X, r1
    108c:	12 97       	sbiw	r26, 0x02	; 2
    108e:	08 95       	ret

00001090 <UART_Start_Command>:
    1090:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <Buffer_Index>
    1094:	f0 e0       	ldi	r31, 0x00	; 0
    1096:	ee 0f       	add	r30, r30
    1098:	ff 1f       	adc	r31, r31
    109a:	ee 0f       	add	r30, r30
    109c:	ff 1f       	adc	r31, r31
    109e:	e3 50       	subi	r30, 0x03	; 3
    10a0:	fe 4f       	sbci	r31, 0xFE	; 254
    10a2:	80 81       	ld	r24, Z
    10a4:	80 93 f4 01 	sts	0x01F4, r24	; 0x8001f4 <Expected_TX_Length>
    10a8:	81 81       	ldd	r24, Z+1	; 0x01
    10aa:	80 93 f3 01 	sts	0x01F3, r24	; 0x8001f3 <Expected_RX_Length>
    10ae:	10 92 f6 01 	sts	0x01F6, r1	; 0x8001f6 <RX_Index>
    10b2:	10 92 f5 01 	sts	0x01F5, r1	; 0x8001f5 <TX_Index>
    10b6:	81 e0       	ldi	r24, 0x01	; 1
    10b8:	80 93 f1 01 	sts	0x01F1, r24	; 0x8001f1 <In_Tx>
    10bc:	08 95       	ret

000010be <UART_End_Command>:
    10be:	08 95       	ret

000010c0 <UART_Transmit>:
    10c0:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <modem_init>
    10c4:	81 11       	cpse	r24, r1
    10c6:	16 c0       	rjmp	.+44     	; 0x10f4 <UART_Transmit+0x34>
    10c8:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <Buffer_Index>
    10cc:	f0 e0       	ldi	r31, 0x00	; 0
    10ce:	80 91 f5 01 	lds	r24, 0x01F5	; 0x8001f5 <TX_Index>
    10d2:	ee 0f       	add	r30, r30
    10d4:	ff 1f       	adc	r31, r31
    10d6:	ee 0f       	add	r30, r30
    10d8:	ff 1f       	adc	r31, r31
    10da:	e3 50       	subi	r30, 0x03	; 3
    10dc:	fe 4f       	sbci	r31, 0xFE	; 254
    10de:	e8 0f       	add	r30, r24
    10e0:	f1 1d       	adc	r31, r1
    10e2:	82 81       	ldd	r24, Z+2	; 0x02
    10e4:	80 93 d2 00 	sts	0x00D2, r24	; 0x8000d2 <__EEPROM_REGION_LENGTH__+0x7f00d2>
    10e8:	80 91 f5 01 	lds	r24, 0x01F5	; 0x8001f5 <TX_Index>
    10ec:	8f 5f       	subi	r24, 0xFF	; 255
    10ee:	80 93 f5 01 	sts	0x01F5, r24	; 0x8001f5 <TX_Index>
    10f2:	08 95       	ret
    10f4:	20 91 f2 01 	lds	r18, 0x01F2	; 0x8001f2 <Text_Index>
    10f8:	82 2f       	mov	r24, r18
    10fa:	90 e0       	ldi	r25, 0x00	; 0
    10fc:	fc 01       	movw	r30, r24
    10fe:	e0 5b       	subi	r30, 0xB0	; 176
    1100:	ff 4f       	sbci	r31, 0xFF	; 255
    1102:	34 91       	lpm	r19, Z
    1104:	3f 32       	cpi	r19, 0x2F	; 47
    1106:	59 f4       	brne	.+22     	; 0x111e <UART_Transmit+0x5e>
    1108:	fc 01       	movw	r30, r24
    110a:	ef 5a       	subi	r30, 0xAF	; 175
    110c:	ff 4f       	sbci	r31, 0xFF	; 255
    110e:	e4 91       	lpm	r30, Z
    1110:	e2 37       	cpi	r30, 0x72	; 114
    1112:	39 f4       	brne	.+14     	; 0x1122 <UART_Transmit+0x62>
    1114:	2f 5f       	subi	r18, 0xFF	; 255
    1116:	20 93 f2 01 	sts	0x01F2, r18	; 0x8001f2 <Text_Index>
    111a:	ed e0       	ldi	r30, 0x0D	; 13
    111c:	03 c0       	rjmp	.+6      	; 0x1124 <UART_Transmit+0x64>
    111e:	e4 91       	lpm	r30, Z
    1120:	01 c0       	rjmp	.+2      	; 0x1124 <UART_Transmit+0x64>
    1122:	ef e2       	ldi	r30, 0x2F	; 47
    1124:	e0 93 d2 00 	sts	0x00D2, r30	; 0x8000d2 <__EEPROM_REGION_LENGTH__+0x7f00d2>
    1128:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <Text_Index>
    112c:	8f 5f       	subi	r24, 0xFF	; 255
    112e:	80 93 f2 01 	sts	0x01F2, r24	; 0x8001f2 <Text_Index>
    1132:	08 95       	ret

00001134 <Write_UART>:
    1134:	cf 92       	push	r12
    1136:	df 92       	push	r13
    1138:	ef 92       	push	r14
    113a:	ff 92       	push	r15
    113c:	0f 93       	push	r16
    113e:	1f 93       	push	r17
    1140:	cf 93       	push	r28
    1142:	df 93       	push	r29
    1144:	d8 2e       	mov	r13, r24
    1146:	c6 2e       	mov	r12, r22
    1148:	ea 01       	movw	r28, r20
    114a:	79 01       	movw	r14, r18
    114c:	01 11       	cpse	r16, r1
    114e:	4f c0       	rjmp	.+158    	; 0x11ee <Write_UART+0xba>
    1150:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <modem_init>
    1154:	0e 94 c7 03 	call	0x78e	; 0x78e <query_counter>
    1158:	60 93 ed 01 	sts	0x01ED, r22	; 0x8001ed <counter_value>
    115c:	70 93 ee 01 	sts	0x01EE, r23	; 0x8001ee <counter_value+0x1>
    1160:	80 93 ef 01 	sts	0x01EF, r24	; 0x8001ef <counter_value+0x2>
    1164:	90 93 f0 01 	sts	0x01F0, r25	; 0x8001f0 <counter_value+0x3>
    1168:	0d 2d       	mov	r16, r13
    116a:	10 e0       	ldi	r17, 0x00	; 0
    116c:	0e 5f       	subi	r16, 0xFE	; 254
    116e:	1f 4f       	sbci	r17, 0xFF	; 255
    1170:	20 91 f7 01 	lds	r18, 0x01F7	; 0x8001f7 <Next_Available_Row>
    1174:	30 e0       	ldi	r19, 0x00	; 0
    1176:	de 01       	movw	r26, r28
    1178:	12 97       	sbiw	r26, 0x02	; 2
    117a:	c9 01       	movw	r24, r18
    117c:	88 0f       	add	r24, r24
    117e:	99 1f       	adc	r25, r25
    1180:	88 0f       	add	r24, r24
    1182:	99 1f       	adc	r25, r25
    1184:	e0 e0       	ldi	r30, 0x00	; 0
    1186:	f0 e0       	ldi	r31, 0x00	; 0
    1188:	9c 01       	movw	r18, r24
    118a:	23 50       	subi	r18, 0x03	; 3
    118c:	3e 4f       	sbci	r19, 0xFE	; 254
    118e:	a9 01       	movw	r20, r18
    1190:	4f 5f       	subi	r20, 0xFF	; 255
    1192:	5f 4f       	sbci	r21, 0xFF	; 255
    1194:	30 97       	sbiw	r30, 0x00	; 0
    1196:	19 f4       	brne	.+6      	; 0x119e <Write_UART+0x6a>
    1198:	e9 01       	movw	r28, r18
    119a:	d8 82       	st	Y, r13
    119c:	0d c0       	rjmp	.+26     	; 0x11b8 <Write_UART+0x84>
    119e:	e1 30       	cpi	r30, 0x01	; 1
    11a0:	f1 05       	cpc	r31, r1
    11a2:	19 f4       	brne	.+6      	; 0x11aa <Write_UART+0x76>
    11a4:	ea 01       	movw	r28, r20
    11a6:	c8 82       	st	Y, r12
    11a8:	07 c0       	rjmp	.+14     	; 0x11b8 <Write_UART+0x84>
    11aa:	6c 91       	ld	r22, X
    11ac:	ef 01       	movw	r28, r30
    11ae:	c8 0f       	add	r28, r24
    11b0:	d9 1f       	adc	r29, r25
    11b2:	c3 50       	subi	r28, 0x03	; 3
    11b4:	de 4f       	sbci	r29, 0xFE	; 254
    11b6:	68 83       	st	Y, r22
    11b8:	31 96       	adiw	r30, 0x01	; 1
    11ba:	11 96       	adiw	r26, 0x01	; 1
    11bc:	e0 17       	cp	r30, r16
    11be:	f1 07       	cpc	r31, r17
    11c0:	4c f3       	brlt	.-46     	; 0x1194 <Write_UART+0x60>
    11c2:	2a c0       	rjmp	.+84     	; 0x1218 <Write_UART+0xe4>
    11c4:	80 91 f7 01 	lds	r24, 0x01F7	; 0x8001f7 <Next_Available_Row>
    11c8:	81 30       	cpi	r24, 0x01	; 1
    11ca:	19 f4       	brne	.+6      	; 0x11d2 <Write_UART+0x9e>
    11cc:	10 92 f7 01 	sts	0x01F7, r1	; 0x8001f7 <Next_Available_Row>
    11d0:	03 c0       	rjmp	.+6      	; 0x11d8 <Write_UART+0xa4>
    11d2:	8f 5f       	subi	r24, 0xFF	; 255
    11d4:	80 93 f7 01 	sts	0x01F7, r24	; 0x8001f7 <Next_Available_Row>
    11d8:	0e 94 84 0a 	call	0x1508	; 0x1508 <Query_UART_State>
    11dc:	81 11       	cpse	r24, r1
    11de:	1f c0       	rjmp	.+62     	; 0x121e <Write_UART+0xea>
    11e0:	60 e8       	ldi	r22, 0x80	; 128
    11e2:	70 e0       	ldi	r23, 0x00	; 0
    11e4:	80 e0       	ldi	r24, 0x00	; 0
    11e6:	90 e0       	ldi	r25, 0x00	; 0
    11e8:	0e 94 04 03 	call	0x608	; 0x608 <Post_Event>
    11ec:	18 c0       	rjmp	.+48     	; 0x121e <Write_UART+0xea>
    11ee:	81 e0       	ldi	r24, 0x01	; 1
    11f0:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <modem_init>
    11f4:	10 92 f2 01 	sts	0x01F2, r1	; 0x8001f2 <Text_Index>
    11f8:	0e 94 60 08 	call	0x10c0	; 0x10c0 <UART_Transmit>
    11fc:	10 c0       	rjmp	.+32     	; 0x121e <Write_UART+0xea>
    11fe:	e0 91 f7 01 	lds	r30, 0x01F7	; 0x8001f7 <Next_Available_Row>
    1202:	f0 e0       	ldi	r31, 0x00	; 0
    1204:	ee 0f       	add	r30, r30
    1206:	ff 1f       	adc	r31, r31
    1208:	e7 50       	subi	r30, 0x07	; 7
    120a:	fe 4f       	sbci	r31, 0xFE	; 254
    120c:	d7 01       	movw	r26, r14
    120e:	8d 91       	ld	r24, X+
    1210:	9c 91       	ld	r25, X
    1212:	91 83       	std	Z+1, r25	; 0x01
    1214:	80 83       	st	Z, r24
    1216:	d6 cf       	rjmp	.-84     	; 0x11c4 <Write_UART+0x90>
    1218:	c1 10       	cpse	r12, r1
    121a:	f1 cf       	rjmp	.-30     	; 0x11fe <Write_UART+0xca>
    121c:	d3 cf       	rjmp	.-90     	; 0x11c4 <Write_UART+0x90>
    121e:	df 91       	pop	r29
    1220:	cf 91       	pop	r28
    1222:	1f 91       	pop	r17
    1224:	0f 91       	pop	r16
    1226:	ff 90       	pop	r15
    1228:	ef 90       	pop	r14
    122a:	df 90       	pop	r13
    122c:	cf 90       	pop	r12
    122e:	08 95       	ret

00001230 <__vector_12>:
    1230:	1f 92       	push	r1
    1232:	0f 92       	push	r0
    1234:	0f b6       	in	r0, 0x3f	; 63
    1236:	0f 92       	push	r0
    1238:	11 24       	eor	r1, r1
    123a:	2f 93       	push	r18
    123c:	3f 93       	push	r19
    123e:	4f 93       	push	r20
    1240:	5f 93       	push	r21
    1242:	6f 93       	push	r22
    1244:	7f 93       	push	r23
    1246:	8f 93       	push	r24
    1248:	9f 93       	push	r25
    124a:	af 93       	push	r26
    124c:	bf 93       	push	r27
    124e:	ef 93       	push	r30
    1250:	ff 93       	push	r31
    1252:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <__EEPROM_REGION_LENGTH__+0x7f00c9>
    1256:	80 ff       	sbrs	r24, 0
    1258:	5f c0       	rjmp	.+190    	; 0x1318 <__vector_12+0xe8>
    125a:	e9 ec       	ldi	r30, 0xC9	; 201
    125c:	f0 e0       	ldi	r31, 0x00	; 0
    125e:	80 81       	ld	r24, Z
    1260:	81 60       	ori	r24, 0x01	; 1
    1262:	80 83       	st	Z, r24
    1264:	80 91 ec 01 	lds	r24, 0x01EC	; 0x8001ec <first_byte_T>
    1268:	88 23       	and	r24, r24
    126a:	41 f1       	breq	.+80     	; 0x12bc <__vector_12+0x8c>
    126c:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <second_byte_slash_n>
    1270:	88 23       	and	r24, r24
    1272:	21 f1       	breq	.+72     	; 0x12bc <__vector_12+0x8c>
    1274:	80 91 ea 01 	lds	r24, 0x01EA	; 0x8001ea <third_slash_r>
    1278:	88 23       	and	r24, r24
    127a:	01 f1       	breq	.+64     	; 0x12bc <__vector_12+0x8c>
    127c:	80 91 e9 01 	lds	r24, 0x01E9	; 0x8001e9 <byte_space_counter>
    1280:	90 91 d2 00 	lds	r25, 0x00D2	; 0x8000d2 <__EEPROM_REGION_LENGTH__+0x7f00d2>
    1284:	e0 91 e7 01 	lds	r30, 0x01E7	; 0x8001e7 <Modem_Recv_Data>
    1288:	f0 91 e8 01 	lds	r31, 0x01E8	; 0x8001e8 <Modem_Recv_Data+0x1>
    128c:	e8 0f       	add	r30, r24
    128e:	f1 1d       	adc	r31, r1
    1290:	31 97       	sbiw	r30, 0x01	; 1
    1292:	90 83       	st	Z, r25
    1294:	8f 5f       	subi	r24, 0xFF	; 255
    1296:	80 93 e9 01 	sts	0x01E9, r24	; 0x8001e9 <byte_space_counter>
    129a:	85 30       	cpi	r24, 0x05	; 5
    129c:	08 f4       	brcc	.+2      	; 0x12a0 <__vector_12+0x70>
    129e:	d5 c0       	rjmp	.+426    	; 0x144a <__vector_12+0x21a>
    12a0:	2d 9a       	sbi	0x05, 5	; 5
    12a2:	10 92 ec 01 	sts	0x01EC, r1	; 0x8001ec <first_byte_T>
    12a6:	10 92 eb 01 	sts	0x01EB, r1	; 0x8001eb <second_byte_slash_n>
    12aa:	10 92 ea 01 	sts	0x01EA, r1	; 0x8001ea <third_slash_r>
    12ae:	60 e0       	ldi	r22, 0x00	; 0
    12b0:	70 e8       	ldi	r23, 0x80	; 128
    12b2:	80 e0       	ldi	r24, 0x00	; 0
    12b4:	90 e0       	ldi	r25, 0x00	; 0
    12b6:	0e 94 04 03 	call	0x608	; 0x608 <Post_Event>
    12ba:	c7 c0       	rjmp	.+398    	; 0x144a <__vector_12+0x21a>
    12bc:	2d 98       	cbi	0x05, 5	; 5
    12be:	80 91 d2 00 	lds	r24, 0x00D2	; 0x8000d2 <__EEPROM_REGION_LENGTH__+0x7f00d2>
    12c2:	84 35       	cpi	r24, 0x54	; 84
    12c4:	31 f4       	brne	.+12     	; 0x12d2 <__vector_12+0xa2>
    12c6:	10 92 e9 01 	sts	0x01E9, r1	; 0x8001e9 <byte_space_counter>
    12ca:	81 e0       	ldi	r24, 0x01	; 1
    12cc:	80 93 ec 01 	sts	0x01EC, r24	; 0x8001ec <first_byte_T>
    12d0:	1d c0       	rjmp	.+58     	; 0x130c <__vector_12+0xdc>
    12d2:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <first_byte_T>
    12d6:	99 23       	and	r25, r25
    12d8:	99 f0       	breq	.+38     	; 0x1300 <__vector_12+0xd0>
    12da:	90 91 e9 01 	lds	r25, 0x01E9	; 0x8001e9 <byte_space_counter>
    12de:	91 30       	cpi	r25, 0x01	; 1
    12e0:	79 f4       	brne	.+30     	; 0x1300 <__vector_12+0xd0>
    12e2:	8d 30       	cpi	r24, 0x0D	; 13
    12e4:	09 f0       	breq	.+2      	; 0x12e8 <__vector_12+0xb8>
    12e6:	ac c0       	rjmp	.+344    	; 0x1440 <__vector_12+0x210>
    12e8:	81 e0       	ldi	r24, 0x01	; 1
    12ea:	80 93 eb 01 	sts	0x01EB, r24	; 0x8001eb <second_byte_slash_n>
    12ee:	10 92 e9 01 	sts	0x01E9, r1	; 0x8001e9 <byte_space_counter>
    12f2:	0c c0       	rjmp	.+24     	; 0x130c <__vector_12+0xdc>
    12f4:	81 e0       	ldi	r24, 0x01	; 1
    12f6:	80 93 ea 01 	sts	0x01EA, r24	; 0x8001ea <third_slash_r>
    12fa:	10 92 e9 01 	sts	0x01E9, r1	; 0x8001e9 <byte_space_counter>
    12fe:	06 c0       	rjmp	.+12     	; 0x130c <__vector_12+0xdc>
    1300:	10 92 ec 01 	sts	0x01EC, r1	; 0x8001ec <first_byte_T>
    1304:	10 92 eb 01 	sts	0x01EB, r1	; 0x8001eb <second_byte_slash_n>
    1308:	10 92 ea 01 	sts	0x01EA, r1	; 0x8001ea <third_slash_r>
    130c:	80 91 e9 01 	lds	r24, 0x01E9	; 0x8001e9 <byte_space_counter>
    1310:	8f 5f       	subi	r24, 0xFF	; 255
    1312:	80 93 e9 01 	sts	0x01E9, r24	; 0x8001e9 <byte_space_counter>
    1316:	99 c0       	rjmp	.+306    	; 0x144a <__vector_12+0x21a>
    1318:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <__EEPROM_REGION_LENGTH__+0x7f00c9>
    131c:	88 23       	and	r24, r24
    131e:	09 f4       	brne	.+2      	; 0x1322 <__vector_12+0xf2>
    1320:	94 c0       	rjmp	.+296    	; 0x144a <__vector_12+0x21a>
    1322:	e9 ec       	ldi	r30, 0xC9	; 201
    1324:	f0 e0       	ldi	r31, 0x00	; 0
    1326:	80 81       	ld	r24, Z
    1328:	82 60       	ori	r24, 0x02	; 2
    132a:	80 83       	st	Z, r24
    132c:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <modem_init>
    1330:	81 11       	cpse	r24, r1
    1332:	74 c0       	rjmp	.+232    	; 0x141c <__vector_12+0x1ec>
    1334:	80 91 f1 01 	lds	r24, 0x01F1	; 0x8001f1 <In_Tx>
    1338:	88 23       	and	r24, r24
    133a:	e1 f0       	breq	.+56     	; 0x1374 <__vector_12+0x144>
    133c:	90 91 f5 01 	lds	r25, 0x01F5	; 0x8001f5 <TX_Index>
    1340:	80 91 f4 01 	lds	r24, 0x01F4	; 0x8001f4 <Expected_TX_Length>
    1344:	89 17       	cp	r24, r25
    1346:	a0 f0       	brcs	.+40     	; 0x1370 <__vector_12+0x140>
    1348:	98 13       	cpse	r25, r24
    134a:	07 c0       	rjmp	.+14     	; 0x135a <__vector_12+0x12a>
    134c:	80 91 f3 01 	lds	r24, 0x01F3	; 0x8001f3 <Expected_RX_Length>
    1350:	81 11       	cpse	r24, r1
    1352:	03 c0       	rjmp	.+6      	; 0x135a <__vector_12+0x12a>
    1354:	10 92 f1 01 	sts	0x01F1, r1	; 0x8001f1 <In_Tx>
    1358:	0d c0       	rjmp	.+26     	; 0x1374 <__vector_12+0x144>
    135a:	60 e0       	ldi	r22, 0x00	; 0
    135c:	71 e0       	ldi	r23, 0x01	; 1
    135e:	80 e0       	ldi	r24, 0x00	; 0
    1360:	90 e0       	ldi	r25, 0x00	; 0
    1362:	0e 94 04 03 	call	0x608	; 0x608 <Post_Event>
    1366:	80 91 f1 01 	lds	r24, 0x01F1	; 0x8001f1 <In_Tx>
    136a:	81 11       	cpse	r24, r1
    136c:	6e c0       	rjmp	.+220    	; 0x144a <__vector_12+0x21a>
    136e:	02 c0       	rjmp	.+4      	; 0x1374 <__vector_12+0x144>
    1370:	10 92 f1 01 	sts	0x01F1, r1	; 0x8001f1 <In_Tx>
    1374:	90 91 f3 01 	lds	r25, 0x01F3	; 0x8001f3 <Expected_RX_Length>
    1378:	99 23       	and	r25, r25
    137a:	c1 f0       	breq	.+48     	; 0x13ac <__vector_12+0x17c>
    137c:	80 91 f6 01 	lds	r24, 0x01F6	; 0x8001f6 <RX_Index>
    1380:	20 91 f8 01 	lds	r18, 0x01F8	; 0x8001f8 <Buffer_Index>
    1384:	e8 2f       	mov	r30, r24
    1386:	f0 e0       	ldi	r31, 0x00	; 0
    1388:	e2 0f       	add	r30, r18
    138a:	f1 1d       	adc	r31, r1
    138c:	ee 0f       	add	r30, r30
    138e:	ff 1f       	adc	r31, r31
    1390:	e7 50       	subi	r30, 0x07	; 7
    1392:	fe 4f       	sbci	r31, 0xFE	; 254
    1394:	01 90       	ld	r0, Z+
    1396:	f0 81       	ld	r31, Z
    1398:	e0 2d       	mov	r30, r0
    139a:	20 91 d2 00 	lds	r18, 0x00D2	; 0x8000d2 <__EEPROM_REGION_LENGTH__+0x7f00d2>
    139e:	20 83       	st	Z, r18
    13a0:	8f 5f       	subi	r24, 0xFF	; 255
    13a2:	80 93 f6 01 	sts	0x01F6, r24	; 0x8001f6 <RX_Index>
    13a6:	89 17       	cp	r24, r25
    13a8:	08 f4       	brcc	.+2      	; 0x13ac <__vector_12+0x17c>
    13aa:	4f c0       	rjmp	.+158    	; 0x144a <__vector_12+0x21a>
    13ac:	20 91 f8 01 	lds	r18, 0x01F8	; 0x8001f8 <Buffer_Index>
    13b0:	82 2f       	mov	r24, r18
    13b2:	90 e0       	ldi	r25, 0x00	; 0
    13b4:	fc 01       	movw	r30, r24
    13b6:	ee 0f       	add	r30, r30
    13b8:	ff 1f       	adc	r31, r31
    13ba:	ee 0f       	add	r30, r30
    13bc:	ff 1f       	adc	r31, r31
    13be:	e3 50       	subi	r30, 0x03	; 3
    13c0:	fe 4f       	sbci	r31, 0xFE	; 254
    13c2:	3f ef       	ldi	r19, 0xFF	; 255
    13c4:	30 83       	st	Z, r19
    13c6:	31 83       	std	Z+1, r19	; 0x01
    13c8:	32 83       	std	Z+2, r19	; 0x02
    13ca:	33 83       	std	Z+3, r19	; 0x03
    13cc:	88 0f       	add	r24, r24
    13ce:	99 1f       	adc	r25, r25
    13d0:	fc 01       	movw	r30, r24
    13d2:	e7 50       	subi	r30, 0x07	; 7
    13d4:	fe 4f       	sbci	r31, 0xFE	; 254
    13d6:	11 82       	std	Z+1, r1	; 0x01
    13d8:	10 82       	st	Z, r1
    13da:	21 30       	cpi	r18, 0x01	; 1
    13dc:	19 f4       	brne	.+6      	; 0x13e4 <__vector_12+0x1b4>
    13de:	10 92 f8 01 	sts	0x01F8, r1	; 0x8001f8 <Buffer_Index>
    13e2:	03 c0       	rjmp	.+6      	; 0x13ea <__vector_12+0x1ba>
    13e4:	2f 5f       	subi	r18, 0xFF	; 255
    13e6:	20 93 f8 01 	sts	0x01F8, r18	; 0x8001f8 <Buffer_Index>
    13ea:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <Buffer_Index>
    13ee:	f0 e0       	ldi	r31, 0x00	; 0
    13f0:	ee 0f       	add	r30, r30
    13f2:	ff 1f       	adc	r31, r31
    13f4:	ee 0f       	add	r30, r30
    13f6:	ff 1f       	adc	r31, r31
    13f8:	e3 50       	subi	r30, 0x03	; 3
    13fa:	fe 4f       	sbci	r31, 0xFE	; 254
    13fc:	80 81       	ld	r24, Z
    13fe:	8f 3f       	cpi	r24, 0xFF	; 255
    1400:	31 f0       	breq	.+12     	; 0x140e <__vector_12+0x1de>
    1402:	60 e8       	ldi	r22, 0x80	; 128
    1404:	70 e0       	ldi	r23, 0x00	; 0
    1406:	80 e0       	ldi	r24, 0x00	; 0
    1408:	90 e0       	ldi	r25, 0x00	; 0
    140a:	0e 94 04 03 	call	0x608	; 0x608 <Post_Event>
    140e:	60 e0       	ldi	r22, 0x00	; 0
    1410:	74 e0       	ldi	r23, 0x04	; 4
    1412:	80 e0       	ldi	r24, 0x00	; 0
    1414:	90 e0       	ldi	r25, 0x00	; 0
    1416:	0e 94 04 03 	call	0x608	; 0x608 <Post_Event>
    141a:	17 c0       	rjmp	.+46     	; 0x144a <__vector_12+0x21a>
    141c:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <Text_Index>
    1420:	85 39       	cpi	r24, 0x95	; 149
    1422:	18 f0       	brcs	.+6      	; 0x142a <__vector_12+0x1fa>
    1424:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <modem_init>
    1428:	10 c0       	rjmp	.+32     	; 0x144a <__vector_12+0x21a>
    142a:	81 e2       	ldi	r24, 0x21	; 33
    142c:	9e e4       	ldi	r25, 0x4E	; 78
    142e:	01 97       	sbiw	r24, 0x01	; 1
    1430:	f1 f7       	brne	.-4      	; 0x142e <__vector_12+0x1fe>
    1432:	0e 94 60 08 	call	0x10c0	; 0x10c0 <UART_Transmit>
    1436:	09 c0       	rjmp	.+18     	; 0x144a <__vector_12+0x21a>
    1438:	8a 30       	cpi	r24, 0x0A	; 10
    143a:	09 f0       	breq	.+2      	; 0x143e <__vector_12+0x20e>
    143c:	61 cf       	rjmp	.-318    	; 0x1300 <__vector_12+0xd0>
    143e:	5a cf       	rjmp	.-332    	; 0x12f4 <__vector_12+0xc4>
    1440:	90 91 eb 01 	lds	r25, 0x01EB	; 0x8001eb <second_byte_slash_n>
    1444:	91 11       	cpse	r25, r1
    1446:	f8 cf       	rjmp	.-16     	; 0x1438 <__vector_12+0x208>
    1448:	5b cf       	rjmp	.-330    	; 0x1300 <__vector_12+0xd0>
    144a:	ff 91       	pop	r31
    144c:	ef 91       	pop	r30
    144e:	bf 91       	pop	r27
    1450:	af 91       	pop	r26
    1452:	9f 91       	pop	r25
    1454:	8f 91       	pop	r24
    1456:	7f 91       	pop	r23
    1458:	6f 91       	pop	r22
    145a:	5f 91       	pop	r21
    145c:	4f 91       	pop	r20
    145e:	3f 91       	pop	r19
    1460:	2f 91       	pop	r18
    1462:	0f 90       	pop	r0
    1464:	0f be       	out	0x3f, r0	; 63
    1466:	0f 90       	pop	r0
    1468:	1f 90       	pop	r1
    146a:	18 95       	reti

0000146c <Init_UART_Service>:
    146c:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <Current_State>
    1470:	08 95       	ret

00001472 <Run_UART_Service>:
    1472:	20 91 05 02 	lds	r18, 0x0205	; 0x800205 <Current_State>
    1476:	21 30       	cpi	r18, 0x01	; 1
    1478:	a9 f0       	breq	.+42     	; 0x14a4 <Run_UART_Service+0x32>
    147a:	18 f0       	brcs	.+6      	; 0x1482 <Run_UART_Service+0x10>
    147c:	22 30       	cpi	r18, 0x02	; 2
    147e:	89 f1       	breq	.+98     	; 0x14e2 <Run_UART_Service+0x70>
    1480:	08 95       	ret
    1482:	60 38       	cpi	r22, 0x80	; 128
    1484:	71 05       	cpc	r23, r1
    1486:	81 05       	cpc	r24, r1
    1488:	91 05       	cpc	r25, r1
    148a:	e9 f5       	brne	.+122    	; 0x1506 <Run_UART_Service+0x94>
    148c:	0e 94 48 08 	call	0x1090	; 0x1090 <UART_Start_Command>
    1490:	81 e0       	ldi	r24, 0x01	; 1
    1492:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <Current_State>
    1496:	60 e0       	ldi	r22, 0x00	; 0
    1498:	71 e0       	ldi	r23, 0x01	; 1
    149a:	80 e0       	ldi	r24, 0x00	; 0
    149c:	90 e0       	ldi	r25, 0x00	; 0
    149e:	0e 94 04 03 	call	0x608	; 0x608 <Post_Event>
    14a2:	08 95       	ret
    14a4:	61 15       	cp	r22, r1
    14a6:	21 e0       	ldi	r18, 0x01	; 1
    14a8:	72 07       	cpc	r23, r18
    14aa:	81 05       	cpc	r24, r1
    14ac:	91 05       	cpc	r25, r1
    14ae:	19 f4       	brne	.+6      	; 0x14b6 <Run_UART_Service+0x44>
    14b0:	0e 94 60 08 	call	0x10c0	; 0x10c0 <UART_Transmit>
    14b4:	08 95       	ret
    14b6:	61 15       	cp	r22, r1
    14b8:	22 e0       	ldi	r18, 0x02	; 2
    14ba:	72 07       	cpc	r23, r18
    14bc:	81 05       	cpc	r24, r1
    14be:	91 05       	cpc	r25, r1
    14c0:	31 f4       	brne	.+12     	; 0x14ce <Run_UART_Service+0x5c>
    14c2:	0e 94 60 08 	call	0x10c0	; 0x10c0 <UART_Transmit>
    14c6:	82 e0       	ldi	r24, 0x02	; 2
    14c8:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <Current_State>
    14cc:	08 95       	ret
    14ce:	61 15       	cp	r22, r1
    14d0:	74 40       	sbci	r23, 0x04	; 4
    14d2:	81 05       	cpc	r24, r1
    14d4:	91 05       	cpc	r25, r1
    14d6:	b9 f4       	brne	.+46     	; 0x1506 <Run_UART_Service+0x94>
    14d8:	0e 94 5f 08 	call	0x10be	; 0x10be <UART_End_Command>
    14dc:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <Current_State>
    14e0:	08 95       	ret
    14e2:	61 15       	cp	r22, r1
    14e4:	22 e0       	ldi	r18, 0x02	; 2
    14e6:	72 07       	cpc	r23, r18
    14e8:	81 05       	cpc	r24, r1
    14ea:	91 05       	cpc	r25, r1
    14ec:	19 f4       	brne	.+6      	; 0x14f4 <Run_UART_Service+0x82>
    14ee:	0e 94 60 08 	call	0x10c0	; 0x10c0 <UART_Transmit>
    14f2:	08 95       	ret
    14f4:	61 15       	cp	r22, r1
    14f6:	74 40       	sbci	r23, 0x04	; 4
    14f8:	81 05       	cpc	r24, r1
    14fa:	91 05       	cpc	r25, r1
    14fc:	21 f4       	brne	.+8      	; 0x1506 <Run_UART_Service+0x94>
    14fe:	0e 94 5f 08 	call	0x10be	; 0x10be <UART_End_Command>
    1502:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <Current_State>
    1506:	08 95       	ret

00001508 <Query_UART_State>:
    1508:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <Current_State>
    150c:	08 95       	ret

0000150e <_exit>:
    150e:	f8 94       	cli

00001510 <__stop_program>:
    1510:	ff cf       	rjmp	.-2      	; 0x1510 <__stop_program>
